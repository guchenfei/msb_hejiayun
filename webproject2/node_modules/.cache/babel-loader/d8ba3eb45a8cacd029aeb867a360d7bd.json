{"remainingRequest":"E:\\ideas-test\\webproject\\node_modules\\babel-loader\\lib\\index.js!E:\\ideas-test\\webproject\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!E:\\ideas-test\\webproject\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\ideas-test\\webproject\\src\\components\\Charts\\TagCloud.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\ideas-test\\webproject\\src\\components\\Charts\\TagCloud.vue","mtime":1587193626000},{"path":"E:\\ideas-test\\webproject\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1655196103443},{"path":"E:\\ideas-test\\webproject\\node_modules\\babel-loader\\lib\\index.js","mtime":1655196104199},{"path":"E:\\ideas-test\\webproject\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1655196103443},{"path":"E:\\ideas-test\\webproject\\node_modules\\vue-loader\\lib\\index.js","mtime":1655196105141}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiRTovaWRlYXMtdGVzdC93ZWJwcm9qZWN0L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgcmVnaXN0ZXJTaGFwZSB9IGZyb20gJ3Zpc2VyLXZ1ZSc7Cgp2YXIgRGF0YVNldCA9IHJlcXVpcmUoJ0BhbnR2L2RhdGEtc2V0Jyk7Cgp2YXIgaW1nVXJsID0gJ2h0dHBzOi8vZ3cuYWxpcGF5b2JqZWN0cy5jb20vem9zL3Jtc3BvcnRhbC9nV3llR0xDZEZGUmF2QkdJRHpXay5wbmcnOwp2YXIgc2NhbGUgPSBbewogIGRhdGFLZXk6ICd4JywKICBuaWNlOiBmYWxzZQp9LCB7CiAgZGF0YUtleTogJ3knLAogIG5pY2U6IGZhbHNlCn1dOwpyZWdpc3RlclNoYXBlKCdwb2ludCcsICdjbG91ZCcsIHsKICBkcmF3OiBmdW5jdGlvbiBkcmF3KGNmZywgY29udGFpbmVyKSB7CiAgICByZXR1cm4gY29udGFpbmVyLmFkZFNoYXBlKCd0ZXh0JywgewogICAgICBhdHRyczogX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHsKICAgICAgICBmaWxsT3BhY2l0eTogY2ZnLm9wYWNpdHksCiAgICAgICAgZm9udFNpemU6IGNmZy5vcmlnaW4uX29yaWdpbi5zaXplLAogICAgICAgIHJvdGF0ZTogY2ZnLm9yaWdpbi5fb3JpZ2luLnJvdGF0ZSwKICAgICAgICB0ZXh0OiBjZmcub3JpZ2luLl9vcmlnaW4udGV4dCwKICAgICAgICB0ZXh0QWxpZ246ICdjZW50ZXInLAogICAgICAgIGZvbnRGYW1pbHk6IGNmZy5vcmlnaW4uX29yaWdpbi5mb250LAogICAgICAgIGZpbGw6IGNmZy5jb2xvciwKICAgICAgICB0ZXh0QmFzZWxpbmU6ICdBbHBoYWJldGljJwogICAgICB9LCBjZmcuc3R5bGUpLCB7fSwgewogICAgICAgIHg6IGNmZy54LAogICAgICAgIHk6IGNmZy55CiAgICAgIH0pCiAgICB9KTsKICB9Cn0pOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ1RhZ0Nsb3VkJywKICBwcm9wczogewogICAgdGFnTGlzdDogewogICAgICB0eXBlOiBBcnJheSwKICAgICAgcmVxdWlyZWQ6IHRydWUKICAgIH0sCiAgICBoZWlnaHQ6IHsKICAgICAgdHlwZTogTnVtYmVyLAogICAgICBkZWZhdWx0OiA0MDAKICAgIH0sCiAgICB3aWR0aDogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgIGRlZmF1bHQ6IDY0MAogICAgfQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGRhdGE6IFtdLAogICAgICBzY2FsZTogc2NhbGUKICAgIH07CiAgfSwKICB3YXRjaDogewogICAgdGFnTGlzdDogZnVuY3Rpb24gdGFnTGlzdCh2YWwpIHsKICAgICAgaWYgKHZhbC5sZW5ndGggPiAwKSB7CiAgICAgICAgdGhpcy5pbml0VGFnQ2xvdWQodmFsKTsKICAgICAgfQogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIGlmICh0aGlzLnRhZ0xpc3QubGVuZ3RoID4gMCkgewogICAgICB0aGlzLmluaXRUYWdDbG91ZCh0aGlzLnRhZ0xpc3QpOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgaW5pdFRhZ0Nsb3VkOiBmdW5jdGlvbiBpbml0VGFnQ2xvdWQoZGF0YVNvdXJjZSkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdmFyIGhlaWdodCA9IHRoaXMuaGVpZ2h0LAogICAgICAgICAgd2lkdGggPSB0aGlzLndpZHRoOwogICAgICB2YXIgZHYgPSBuZXcgRGF0YVNldC5WaWV3KCkuc291cmNlKGRhdGFTb3VyY2UpOwogICAgICB2YXIgcmFuZ2UgPSBkdi5yYW5nZSgndmFsdWUnKTsKICAgICAgdmFyIG1pbiA9IHJhbmdlWzBdOwogICAgICB2YXIgbWF4ID0gcmFuZ2VbMV07CiAgICAgIHZhciBpbWFnZU1hc2sgPSBuZXcgSW1hZ2UoKTsKICAgICAgaW1hZ2VNYXNrLmNyb3NzT3JpZ2luID0gJyc7CiAgICAgIGltYWdlTWFzay5zcmMgPSBpbWdVcmw7CgogICAgICBpbWFnZU1hc2sub25sb2FkID0gZnVuY3Rpb24gKCkgewogICAgICAgIGR2LnRyYW5zZm9ybSh7CiAgICAgICAgICB0eXBlOiAndGFnLWNsb3VkJywKICAgICAgICAgIGZpZWxkczogWyduYW1lJywgJ3ZhbHVlJ10sCiAgICAgICAgICBzaXplOiBbd2lkdGgsIGhlaWdodF0sCiAgICAgICAgICBpbWFnZU1hc2s6IGltYWdlTWFzaywKICAgICAgICAgIGZvbnQ6ICdWZXJkYW5hJywKICAgICAgICAgIHBhZGRpbmc6IDAsCiAgICAgICAgICB0aW1lSW50ZXJ2YWw6IDUwMDAsCiAgICAgICAgICAvLyBtYXggZXhlY3V0ZSB0aW1lCiAgICAgICAgICByb3RhdGU6IGZ1bmN0aW9uIHJvdGF0ZSgpIHsKICAgICAgICAgICAgdmFyIHJhbmRvbSA9IH5+KE1hdGgucmFuZG9tKCkgKiA0KSAlIDQ7CgogICAgICAgICAgICBpZiAocmFuZG9tID09PSAyKSB7CiAgICAgICAgICAgICAgcmFuZG9tID0gMDsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgcmV0dXJuIHJhbmRvbSAqIDkwOyAvLyAwLCA5MCwgMjcwCiAgICAgICAgICB9LAogICAgICAgICAgZm9udFNpemU6IGZ1bmN0aW9uIGZvbnRTaXplKGQpIHsKICAgICAgICAgICAgaWYgKGQudmFsdWUpIHsKICAgICAgICAgICAgICByZXR1cm4gKGQudmFsdWUgLSBtaW4pIC8gKG1heCAtIG1pbikgKiAoMzIgLSA4KSArIDg7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHJldHVybiAwOwogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICAgIF90aGlzLmRhdGEgPSBkdi5yb3dzOwogICAgICB9OwogICAgfQogIH0KfTs="},{"version":3,"mappings":";;;;;;;;;;AASA;;AACA;;AAEA;AAEA,aACA;AAAAA;AAAAC;AAAA,CADA,EAEA;AAAAD;AAAAC;AAAA,CAFA;AAKAC;AACAC,MADA,gBACAC,GADA,EACAC,SADA,EACA;AACA;AACAC;AACAC,gCADA;AAEAC,yCAFA;AAGAC,yCAHA;AAIAC,qCAJA;AAKAC,2BALA;AAMAC,2CANA;AAOAC,uBAPA;AAQAC;AARA,SASAV,SATA;AAUAW,gBAVA;AAWAC;AAXA;AADA;AAeA;AAjBA;AAoBA;AACAC,kBADA;AAEAC;AACAC;AACAC,iBADA;AAEAC;AAFA,KADA;AAKAC;AACAF,kBADA;AAEAG;AAFA,KALA;AASAC;AACAJ,kBADA;AAEAG;AAFA;AATA,GAFA;AAgBAE,MAhBA,kBAgBA;AACA;AACAA,cADA;AAEAC;AAFA;AAIA,GArBA;AAsBAC;AACAR;AACA;AACA;AACA;AACA;AALA,GAtBA;AA6BAS,SA7BA,qBA6BA;AACA;AACA;AACA;AACA,GAjCA;AAkCAC;AACAC,gBADA,wBACAC,UADA,EACA;AAAA;;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACAC;AACAA;;AACAA;AACAC;AACAb,2BADA;AAEAc,mCAFA;AAGAC,+BAHA;AAIAH,8BAJA;AAKAI,yBALA;AAMAC,oBANA;AAOAC,4BAPA;AAOA;AACA7B,gBARA,oBAQA;AACA;;AACA;AACA8B;AACA;;AACA,+BALA,CAKA;AACA,WAdA;AAeA/B,kBAfA,oBAeAgC,CAfA,EAeA;AACA;AACA;AACA;;AACA;AACA;AApBA;AAsBA;AACA,OAxBA;AAyBA;AApCA;AAlCA","names":["dataKey","nice","registerShape","draw","cfg","container","attrs","fillOpacity","fontSize","rotate","text","textAlign","fontFamily","fill","textBaseline","x","y","name","props","tagList","type","required","height","default","width","data","scale","watch","mounted","methods","initTagCloud","dataSource","imageMask","dv","fields","size","font","padding","timeInterval","random","d"],"sourceRoot":"src/components/Charts","sources":["TagCloud.vue"],"sourcesContent":["<template>\r\n  <v-chart :width=\"width\" :height=\"height\" :padding=\"[0]\" :data=\"data\" :scale=\"scale\">\r\n    <v-tooltip :show-title=\"false\" />\r\n    <v-coord type=\"rect\" direction=\"TL\" />\r\n    <v-point position=\"x*y\" color=\"category\" shape=\"cloud\" tooltip=\"value*category\" />\r\n  </v-chart>\r\n</template>\r\n\r\n<script>\r\nimport { registerShape } from 'viser-vue'\r\nconst DataSet = require('@antv/data-set')\r\n\r\nconst imgUrl = 'https://gw.alipayobjects.com/zos/rmsportal/gWyeGLCdFFRavBGIDzWk.png'\r\n\r\nconst scale = [\r\n    { dataKey: 'x', nice: false },\r\n    { dataKey: 'y', nice: false }\r\n]\r\n\r\nregisterShape('point', 'cloud', {\r\n    draw(cfg, container) {\r\n        return container.addShape('text', {\r\n            attrs: {\r\n                fillOpacity: cfg.opacity,\r\n                fontSize: cfg.origin._origin.size,\r\n                rotate: cfg.origin._origin.rotate,\r\n                text: cfg.origin._origin.text,\r\n                textAlign: 'center',\r\n                fontFamily: cfg.origin._origin.font,\r\n                fill: cfg.color,\r\n                textBaseline: 'Alphabetic',\r\n                ...cfg.style,\r\n                x: cfg.x,\r\n                y: cfg.y\r\n            }\r\n        })\r\n    }\r\n})\r\n\r\nexport default {\r\n    name: 'TagCloud',\r\n    props: {\r\n        tagList: {\r\n            type: Array,\r\n            required: true\r\n        },\r\n        height: {\r\n            type: Number,\r\n            default: 400\r\n        },\r\n        width: {\r\n            type: Number,\r\n            default: 640\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            data: [],\r\n            scale\r\n        }\r\n    },\r\n    watch: {\r\n        tagList: function(val) {\r\n            if (val.length > 0) {\r\n                this.initTagCloud(val)\r\n            }\r\n        }\r\n    },\r\n    mounted() {\r\n        if (this.tagList.length > 0) {\r\n            this.initTagCloud(this.tagList)\r\n        }\r\n    },\r\n    methods: {\r\n        initTagCloud(dataSource) {\r\n            const { height, width } = this\r\n\r\n            const dv = new DataSet.View().source(dataSource)\r\n            const range = dv.range('value')\r\n            const min = range[0]\r\n            const max = range[1]\r\n            const imageMask = new Image()\r\n            imageMask.crossOrigin = ''\r\n            imageMask.src = imgUrl\r\n            imageMask.onload = () => {\r\n                dv.transform({\r\n                    type: 'tag-cloud',\r\n                    fields: ['name', 'value'],\r\n                    size: [width, height],\r\n                    imageMask,\r\n                    font: 'Verdana',\r\n                    padding: 0,\r\n                    timeInterval: 5000, // max execute time\r\n                    rotate() {\r\n                        let random = ~~(Math.random() * 4) % 4\r\n                        if (random === 2) {\r\n                            random = 0\r\n                        }\r\n                        return random * 90 // 0, 90, 270\r\n                    },\r\n                    fontSize(d) {\r\n                        if (d.value) {\r\n                            return ((d.value - min) / (max - min)) * (32 - 8) + 8\r\n                        }\r\n                        return 0\r\n                    }\r\n                })\r\n                this.data = dv.rows\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>\r\n"]}]}