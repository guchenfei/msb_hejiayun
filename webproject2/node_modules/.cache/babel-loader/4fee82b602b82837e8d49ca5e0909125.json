{"remainingRequest":"E:\\ideas-test\\webproject\\node_modules\\babel-loader\\lib\\index.js!E:\\ideas-test\\webproject\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!E:\\ideas-test\\webproject\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\ideas-test\\webproject\\src\\views\\owner\\information.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\ideas-test\\webproject\\src\\views\\owner\\information.vue","mtime":1657034006485},{"path":"E:\\ideas-test\\webproject\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1655196103443},{"path":"E:\\ideas-test\\webproject\\node_modules\\babel-loader\\lib\\index.js","mtime":1655196104199},{"path":"E:\\ideas-test\\webproject\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1655196103443},{"path":"E:\\ideas-test\\webproject\\node_modules\\vue-loader\\lib\\index.js","mtime":1655196105141}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyDA;AACA;AACA;;AACA,uB,CACA;AACA;;;AACA,eACA;AACAA,iBADA;AAEAC,aAFA;AAGAC,iBAHA;AAIAC,6BAJA;AAKAC;AAAA;AAAA;AALA,CADA,EAQA;AACAJ,iBADA;AAEAC,eAFA;AAGAC;AAHA,CARA,EAaA;AACAF,iBADA;AAEAC,eAFA;AAGAC,2BAHA;AAIAC,6BAJA;AAKAC;AAAA;AAAA;AALA,CAbA,EAoBA;AACAJ,iBADA;AAEAC,aAFA;AAGAC;AAHA,CApBA,EAyBA;AACAF,iBADA;AAEAC,aAFA;AAGAC;AAHA,CAzBA,EA8BA;AACAF,iBADA;AAEAC,eAFA;AAGAC;AAHA,CA9BA,EAmCA;AACAF,iBADA;AAEAC,eAFA;AAGAC;AAHA,CAnCA,EAwCA;AACAF,iBADA;AAEAC,eAFA;AAGAC;AAHA,CAxCA,EA6CA;AACAF,iBADA;AAEAC,eAFA;AAGAC;AAHA,CA7CA,EAkDA;AACAF,iBADA;AAEAC,aAFA;AAGAC;AAHA,CAlDA,EAuDA;AACAF,iBADA;AAEAC,aAFA;AAGAC,wBAHA;AAIAG;AAAAC;AAAA;AAJA,CAvDA,E,CA+DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACAC,MADA,kBACA;AAAA;;AACA;AACAC;AACAC,yBADA;AAEAC;AAFA,OADA;AAKAC;AACAC,qBADA;AAEAC,yBAFA;AAGAC,oCAHA;AAIAC;AAJA,OALA;AAWAC;AACAC,2BADA;AAEAC;AAAA;AAAA,SAFA;AAGAC,6BAHA;AAIAC,6BAJA;AAKAC,gDALA;AAMAC;AAAA;AAAA;AANA,OAXA;AAmBAf,cAnBA;AAoBAgB,sBApBA;AAqBAC,sBArBA;AAsBAC,eAtBA;AAuBAC;AAvBA;AAyBA,GA3BA;AA4BAC;AACAC,gBADA,0BACA;AAAA;;AACA;AACAC;AACAC;AACA,SAHA;AAIAC;AACAD,sDADA,CAEA;;AACA;AACA,SARA;AASAE;AACA;AACA;AACAF;AACA;AAbA;AAeA;AAjBA,GA5BA;AA+CAG,SA/CA,qBA+CA;AACA;AACA;AACA,GAlDA;AAmDAC;AACAC,cADA,wBACA;AAAA;;AACAC;AACA;AACAN;AACA,OAHA;AAIA,KANA;AAOAO,WAPA,qBAOA;AAAA;;AACA,qBADA,CAEA;;AACA;AACAC,sCADA;AAEAC,gDAFA;AAGAC;AAHA,QAHA,CAQA;;AACAC;AACAX;AACA;;AACA;AACAA;;AACA;AACAY;AACA,WAFA,MAEA;AACAA;AACA;;AACA;AACAA;AACA,WAFA,MAEA;AACAA;AACA;;AACA;AACAA;AACA,WAFA,MAEA;AACAA;AACA;AACA,SAjBA,EAHA,CAqBA;;;AACA;AACA;AACA;AACA,OAzBA;AA0BA,KA1CA;AA2CAC,cA3CA,wBA2CA;AAAA;;AACA;AACA;AACAL,sCADA;AAEAC;AAFA;AAIA;AACAK;AACAd;AACA;;AACA;AACA;AACAY;AACA,WAFA,MAEA;AACAA;AACA;;AACA;AACAA;AACA,WAFA,MAEA;AACAA;AACA;AACA,SAXA;AAYA,OAfA;AAgBA,KAlEA;AAmEAG,cAnEA,wBAmEA;AAAA;;AACA;AACA;AACAL;AADA;AAGA;AACAM;AACAhB;AACA;AACA,OAHA;AAIA,KA7EA;AA8EAiB,oBA9EA,4BA8EA/B,UA9EA,EA8EAgC,OA9EA,EA8EA5C,MA9EA,EA8EA;AACA0B;AACA,KAhFA;AAiFAmB,gBAjFA,0BAiFA;AACA;AACA,KAnFA;AAoFAC,wBApFA,kCAoFA;AACA;AACA,KAtFA;AAuFAC,SAvFA,mBAuFA;AACArB;AACA;AACA7B,sBADA;AAEAmD,sIAFA;AAGAC,YAHA,kBAGA;AACA;AACAC;AACA,WAFA,EAEAC,KAFA,CAEA;AAAA;AAAA,WAFA;AAGA,SAPA;AAQAC,gBARA,sBAQA;AARA;AAUA,KAnGA;AAoGAC,WApGA,qBAoGA;AACA;AACAxD,sBADA;AAEAmD,sIAFA;AAGAC,YAHA,kBAGA;AACA;AACAC;AACA,WAFA,EAEAC,KAFA,CAEA;AAAA;AAAA,WAFA;AAGA,SAPA;AAQAC,gBARA,sBAQA;AARA;AAUA,KA/GA;AAgHAE,UAhHA,kBAgHAC,IAhHA,EAgHA;AAAA;;AACA7B;AACA;AACAA;;AACA;AACA,OAHA;AAIA;AACA8B,sDADA;AAEAC;AAFA;AAIA/B,4BAVA,CAWA;;AACAgC;AACA;AACA;;AACA;AACAC,uBADA;AAEAC,qBAFA;AAGAC;AAHA;;AAKA;AACA,iCATA,CAUA;AACA,OAXA;AAYA;AAxIA,GAnDA;AA6LAC;AACAC,YADA;AAEAC;AAFA;AA7LA","names":["align","title","dataIndex","defaultSortOrder","sorter","scopedSlots","customRender","data","visibleObj","addvisible","importexcelvisible","form","housecode","region","retrievingcontent","ownerType","pagination","defaultPageSize","showTotal","showQuickJumper","showSizeChanger","pageSizeOptions","onShowSizeChange","columns","selectedRows","codes","companyList","computed","rowSelection","onChange","console","onSelect","onSelectAll","created","methods","getCompany","selectCompany","getData","column","value","customerType","selectCustomer","item","changeData","selectCustomerByColumnAndValue","selectType","selectByCustomerByCustomerType","paginationChange","filters","showAddModal","showImportExcelModal","start","content","onOk","setTimeout","catch","onCancel","disable","handle","type","customerCodes","status","UpdateCustomerStatusByCustomerCode","message","duration","description","components","add","importexcel"],"sourceRoot":"src/views/owner","sources":["information.vue"],"sourcesContent":["<template>\n  <div>\n    <a-row>\n      <a-form-model :model=\"form\" layout=\"inline\">\n        <a-form-model-item label=\"房间编码\">\n          <a-input placeholder=\"请输入房间编码\" v-model=\"form.housecode\" />\n        </a-form-model-item>\n        <a-form-model-item label=\"快速检索\">\n          <a-select v-model=\"form.region\" placeholder=\"业主编码\" class=\"select\">\n            <a-select-option value=\"customer_code\">业主编码</a-select-option>\n            <a-select-option value=\"customer_name\">业主姓名</a-select-option>\n            <a-select-option value=\"certificate_number\">证件号码</a-select-option>\n            <a-select-option value=\"phone_number\">手机号码</a-select-option>\n          </a-select>\n        </a-form-model-item>\n        <a-form-model-item>\n          <a-input placeholder=\"请输入具体信息\" v-model=\"form.retrievingcontent\"/>\n          <a-icon type=\"search\" class=\"retrievingcontent-icon\" @click=\"getData\"/>\n        </a-form-model-item>\n        <a-form-model-item label=\"快速检索\">\n          <a-select v-model=\"form.ownerType\" placeholder=\"全部业主\" class=\"select\" @change=\"getData\">\n            <a-select-option value=\"\">全部业主</a-select-option>\n            <a-select-option value=\"正式业主\">正式业主</a-select-option>\n            <a-select-option value=\"临时业主\">临时业主</a-select-option>\n          </a-select>\n        </a-form-model-item>\n      </a-form-model>\n    </a-row>\n    <a-row class=\"setting\">\n      <a-button type=\"primary\" icon=\"plus-circle\" @click=\"showAddModal\">新增</a-button>&nbsp;\n      <a-button type=\"primary\" icon=\"caret-right\" @click=\"handle('1')\">启用</a-button>&nbsp;\n      <a-button type=\"primary\" icon=\"pause\" @click=\"handle('0')\">禁用</a-button>&nbsp;\n      <a-button type=\"primary\" icon=\"file\" @click=\"showImportExcelModal\">导入</a-button>\n    </a-row>\n    <a-row>\n      <a-table\n        :columns=\"columns\"\n        :dataSource=\"data\"\n        @change=\"paginationChange\"\n        position=\"bottom\"\n        :pagination=\"pagination\"\n        :rowSelection=\"rowSelection\"\n      >\n        <a slot=\"operating\">\n          <!-- slot-scope=\"text, record\" -->\n          <a>家庭成员(2)</a>\n          <a-divider type=\"vertical\" />\n          <a>房产登记(2)</a>\n        </a>\n      </a-table>\n    </a-row>\n    <add :visibleObj=\"visibleObj\"></add>\n    <importexcel :visibleObj=\"visibleObj\" :companyList=\"companyList\"></importexcel>\n  </div>\n</template>\n\n<script>\nimport add from './information-dialog/add'\nimport importexcel from './information-dialog/importexcel'\nimport { selectCustomer, selectCompany, selectCustomerByColumnAndValue, selectByCustomerByCustomerType, UpdateCustomerStatusByCustomerCode } from '@/api/owner'\nconst QS = require('qs')\n// import _ from 'lodash'\n// import mockjs2 from 'mockjs2'\nconst columns = [\n    {\n        align: 'center',\n        title: '编号',\n        dataIndex: 'id',\n        defaultSortOrder: 'descend',\n        sorter: (a, b) => a.key - b.key\n    },\n    {\n        align: 'center',\n        title: '所属公司',\n        dataIndex: 'company'\n    },\n    {\n        align: 'center',\n        title: '业主编码',\n        dataIndex: 'customerCode',\n        defaultSortOrder: 'descend',\n        sorter: (a, b) => a.ownercode - b.ownercode\n    },\n    {\n        align: 'center',\n        title: '姓名',\n        dataIndex: 'customerName'\n    },\n    {\n        align: 'center',\n        title: '性别',\n        dataIndex: 'customerGender'\n    },\n    {\n        align: 'center',\n        title: '出生日期',\n        dataIndex: 'customerBirthday'\n    },\n    {\n        align: 'center',\n        title: '证件号码',\n        dataIndex: 'certificateNumber'\n    },\n    {\n        align: 'center',\n        title: '手机号码',\n        dataIndex: 'phoneNumber'\n    },\n    {\n        align: 'center',\n        title: '银行代扣',\n        dataIndex: 'isBankWithhold'\n    },\n    {\n        align: 'center',\n        title: '状态',\n        dataIndex: 'customerStatus'\n    },\n    {\n        align: 'center',\n        title: '操作',\n        dataIndex: 'operating',\n        scopedSlots: { customRender: 'operating' }\n    }\n]\n\n// const data = []\n// for (let i = 0; i < 200; i++) {\n//     data.push({\n//         key: i,\n//         affiliatedcompany: '海淀子公司',\n//         ownercode: _.random(100000, 999999),\n//         name: mockjs2.Random.cname(),\n//         sex: '男',\n//         dateofbirth: mockjs2.Random.date('yyyy-MM-dd'),\n//         idnumber: mockjs2.Random.id(),\n//         phonenumber: '13811223344',\n//         bankwithholding: mockjs2.Random.boolean() === true ? '是' : '否',\n//         status: mockjs2.Random.boolean() === true ? '正常' : '停用',\n//         operating: 'New York No. 1 Lake Park'\n//     })\n// }\n\nexport default {\n    data() {\n        return {\n            visibleObj: {\n                addvisible: false,\n                importexcelvisible: false\n            },\n            form: {\n                housecode: '',\n                region: undefined,\n                retrievingcontent: undefined,\n                ownerType: undefined\n            },\n            pagination: {\n                defaultPageSize: 10,\n                showTotal: total => `共 ${total} 条数据`,\n                showQuickJumper: true,\n                showSizeChanger: true,\n                pageSizeOptions: ['5', '10', '15', '20'],\n                onShowSizeChange: (current, pageSize) => (this.pageSize = pageSize)\n            },\n            data: [],\n            columns,\n            selectedRows: [],\n            codes: [],\n            companyList: []\n        }\n    },\n    computed: {\n        rowSelection() {\n            return {\n                onChange: (selectedRowKeys, selectedRows) => {\n                    console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows)\n                },\n                onSelect: (record, selected, selectedRows) => {\n                    console.log(record, selected, selectedRows)\n                    // eslint-disable-next-line vue/no-side-effects-in-computed-properties\n                    this.selectedRows = selectedRows\n                },\n                onSelectAll: (selected, selectedRows, changeRows) => {\n                    // eslint-disable-next-line vue/no-side-effects-in-computed-properties\n                    this.selectedRows = selectedRows\n                    console.log(selected, selectedRows, changeRows)\n                }\n            }\n        }\n    },\n    created() {\n        this.getData()\n        this.getCompany()\n    },\n    methods: {\n        getCompany() {\n            selectCompany().then(res => {\n                this.companyList = res.result\n                console.log(this.companyList, '------', res.result)\n            })\n        },\n        getData() {\n            this.data = []\n            // 向后端传递数据，传递的属性如下\n            const obj = {\n                column: this.form.region || '',\n                value: this.form.retrievingcontent || '',\n                customerType: this.form.ownerType\n            }\n            // 把声明的obj填入到接口参数中\n            selectCustomer(obj).then(res => {\n                console.log(res)\n                this.data = res.result\n                this.data.map(item => {\n                    console.log(item.customerStatus === '1')\n                    if (item.customerStatus === '1') {\n                         item.customerStatus = '启用'\n                     } else if (item.customerStatus === '0') {\n                         item.customerStatus = '禁用'\n                     }\n                     if (item.isBankWithhold === '1') {\n                         item.isBankWithhold = '是'\n                     } else if (item.isBankWithhold === '0') {\n                         item.isBankWithhold = '否'\n                     }\n                     if (item.customerGender === '1') {\n                         item.customerGender = '男'\n                     } else if (item.customerGender === '0') {\n                         item.customerGender = '女'\n                     }\n                })\n                // 用户在查询之后，清空筛选项内容 注意：要与上方data中的form属性保持值一致\n                this.form.region = undefined\n                this.form.retrievingcontent = undefined\n                this.form.ownerType = undefined\n            })\n        },\n        changeData() {\n            this.data = []\n            const sendData = {\n                column: this.form.region || '',\n                value: this.form.retrievingcontent || ''\n            }\n            const parameter = QS.stringify(sendData)\n            selectCustomerByColumnAndValue(parameter).then(res => {\n                console.log(res)\n                this.data = res.result\n                 this.data.map(item => {\n                     if (item.customerStatus === '1') {\n                         item.customerStatus = '启用'\n                     } else if (item.customerStatus === '0') {\n                         item.customerStatus = '禁用'\n                     }\n                     if (item.isBankWithhold === '1') {\n                         item.isBankWithhold = '是'\n                     } else if (item.isBankWithhold === '0') {\n                         item.isBankWithhold = '否'\n                     }\n                })\n            })\n        },\n        selectType() {\n            this.data = []\n            const sendData = {\n                customerType: this.form.ownerType || ''\n            }\n            const parameter = QS.stringify(sendData)\n            selectByCustomerByCustomerType(parameter).then(res => {\n                console.log(res)\n                this.data = res.result\n            })\n        },\n        paginationChange(pagination, filters, sorter) {\n            console.log('params', pagination, filters, sorter)\n        },\n        showAddModal() {\n            this.visibleObj.addvisible = true\n        },\n        showImportExcelModal() {\n            this.visibleObj.importexcelvisible = true\n        },\n        start() {\n            console.log(this.selectedRows)\n            this.$confirm({\n                title: '确认对话框',\n                content: `确认要处理选中的${this.selectedRows.length}项记录吗？`,\n                onOk() {\n                    return new Promise((resolve, reject) => {\n                        setTimeout(Math.random() > 0.5 ? resolve : reject, 1000)\n                    }).catch(() => console.log('Oops errors!'))\n                },\n                onCancel() {}\n            })\n        },\n        disable() {\n            this.$confirm({\n                title: '确认对话框',\n                content: `确认要处理选中的${this.selectedRows.length}项记录吗？`,\n                onOk() {\n                    return new Promise((resolve, reject) => {\n                        setTimeout(Math.random() > 0.5 ? resolve : reject, 1000)\n                    }).catch(() => console.log('Oops errors!'))\n                },\n                onCancel() {}\n            })\n        },\n        handle(type) {\n            console.log(this.selectedRows, '-------')\n            this.selectedRows.map(item => {\n                console.log(item.customerCode)\n                this.codes.push(item.customerCode)\n            })\n            const sendData = {\n                customerCodes: this.codes.join('|').toString(),\n                status: type\n            }\n            console.log(sendData)\n            // const parameter = QS.stringify(sendData)\n            UpdateCustomerStatusByCustomerCode(sendData).then(res => {\n                // if (res.result === 1) {\n                this.getData()\n                this.$notification.success({\n                    message: '提示',\n                    duration: 3,\n                    description: res.result\n                })\n                this.codes = []\n                this.selectedRows = []\n                // }\n            })\n        }\n    },\n    components: {\n        add,\n        importexcel\n    }\n}\n</script>\n\n<style lang=\"less\" scoped>\n.select {\n    width: 110px;\n}\n.retrievingcontent-icon {\n    position: absolute;\n    top: 50%;\n    right: 10px;\n    transform: translateY(-50%);\n}\n/deep/ input,\n/deep/ .ant-select-selection {\n    border-radius: 4px;\n}\n.setting {\n    margin: 10px 0;\n}\n</style>\n"]}]}