{"remainingRequest":"E:\\ideas-test\\webproject\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\ideas-test\\webproject\\src\\views\\cost\\pool\\public.vue?vue&type=style&index=0&id=cb5118d8&lang=less&scoped=true&","dependencies":[{"path":"E:\\ideas-test\\webproject\\src\\views\\cost\\pool\\public.vue","mtime":1587908664000},{"path":"E:\\ideas-test\\webproject\\node_modules\\css-loader\\dist\\cjs.js","mtime":1655196104040},{"path":"E:\\ideas-test\\webproject\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1655196105840},{"path":"E:\\ideas-test\\webproject\\node_modules\\postcss-loader\\src\\index.js","mtime":1655196104749},{"path":"E:\\ideas-test\\webproject\\node_modules\\less-loader\\dist\\cjs.js","mtime":1655196104499},{"path":"E:\\ideas-test\\webproject\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1655196103443},{"path":"E:\\ideas-test\\webproject\\node_modules\\vue-loader\\lib\\index.js","mtime":1655196105141}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5zZWxlY3QgewogICAgd2lkdGg6IDE2MHB4Owp9Ci5yZXRyaWV2aW5nY29udGVudC1pY29uIHsKICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICAgIHRvcDogNTAlOwogICAgcmlnaHQ6IDEwcHg7CiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7Cn0KL2RlZXAvIGlucHV0LAovZGVlcC8gLmFudC1zZWxlY3Qtc2VsZWN0aW9uIHsKICAgIGJvcmRlci1yYWRpdXM6IDRweDsKfQouc2V0dGluZyB7CiAgICBtYXJnaW46IDEwcHggMDsKfQo="},{"version":3,"sources":["public.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"public.vue","sourceRoot":"src/views/cost/pool","sourcesContent":["<template>\n  <div>\n    <a-row>\n      <a-form :form=\"form\" layout=\"inline\">\n        <a-form-item label=\"选择楼盘\">\n          <a-select placeholder=\"选择楼盘\" class=\"select\" @change=\"chooseestate\">\n            <a-select-option value=\"1\">楼盘1</a-select-option>\n            <a-select-option value=\"2\">楼盘2</a-select-option>\n            <a-select-option value=\"3\">楼盘3</a-select-option>\n            <a-select-option value=\"4\">楼盘4</a-select-option>\n          </a-select>\n        </a-form-item>\n      </a-form>\n    </a-row>\n    <a-row class=\"setting\">\n      <a-button type=\"primary\" icon=\"plus-circle\" @click=\"showAddModal\">新增</a-button>\n    </a-row>\n    <a-row>\n      <a-table\n        :columns=\"columns\"\n        :dataSource=\"data\"\n        @change=\"paginationChange\"\n        position=\"bottom\"\n        :pagination=\"pagination\"\n        :rowSelection=\"rowSelection\"\n        :scroll=\"{ y: 450 }\"\n      >\n        <a slot=\"feename\" slot-scope=\"text, recored\" @click=\"edit(recored)\">{{ text }}</a>\n      </a-table>\n    </a-row>\n    <add-edit :publicobj=\"publicobj\"></add-edit>\n  </div>\n</template>\n\n<script>\nimport addEdit from './public.add.edit/add.edit'\nimport _ from 'lodash'\nconst columns = [\n    {\n        align: 'center',\n        width: '7%',\n        title: '编号',\n        dataIndex: 'key',\n        defaultSortOrder: 'descend',\n        sorter: (a, b) => a.key - b.key\n    },\n    {\n        align: 'center',\n        title: '所属楼盘',\n        dataIndex: 'property'\n    },\n    {\n        align: 'center',\n        title: '费项编号',\n        dataIndex: 'feenumber',\n        defaultSortOrder: 'descend',\n        sorter: (a, b) => a.feenumber - b.feenumber\n    },\n    {\n        align: 'center',\n        title: '费项名称',\n        dataIndex: 'feename',\n        scopedSlots: { customRender: 'feename' }\n    },\n    {\n        align: 'center',\n        title: '单价',\n        dataIndex: 'price'\n    },\n    {\n        align: 'center',\n        title: '允许改价',\n        dataIndex: 'pricechanges'\n    },\n    {\n        align: 'center',\n        title: '收费周期',\n        dataIndex: 'chargingcycle'\n    },\n    {\n        align: 'center',\n        title: '滞纳金比率%',\n        dataIndex: 'penalty'\n    },\n    {\n        align: 'center',\n        title: '超期天数',\n        dataIndex: 'dayspastdue'\n    },\n    {\n        align: 'center',\n        title: '隐藏打印',\n        dataIndex: 'hideprinting'\n    }\n]\n\nconst data = []\nfor (let i = 0; i < 200; i++) {\n    data.push({\n        key: i,\n        property: '中东首座',\n        feenumber: '0017',\n        feename: _.sample(\n            [\n                '阁楼采暖费',\n                '卫生费',\n                '车位费',\n                '停车管理费',\n                '水电费',\n                '物业费',\n                '污水处理费',\n                '车库管理费',\n                '二次排污费',\n                '电梯电费',\n                '其他费用',\n                '阶梯水费',\n                '取暖费'\n            ],\n            1\n        ),\n        price: _.random(1, 1000),\n        pricechanges: _.sample(['是', '否'], 1),\n        chargingcycle: 1,\n        penalty: 5,\n        dayspastdue: 7,\n        hideprinting: _.sample(['是', '否'], 1)\n    })\n}\n\nexport default {\n    data() {\n        return {\n            publicobj: {\n                visible: false,\n                recored: null\n            },\n            form: this.$form.createForm(this),\n            pagination: {\n                defaultPageSize: 10,\n                showTotal: total => `共 ${total} 条数据`,\n                showQuickJumper: true,\n                showSizeChanger: true,\n                pageSizeOptions: ['5', '10', '15', '20'],\n                onShowSizeChange: (current, pageSize) => (this.pageSize = pageSize)\n            },\n            data,\n            columns,\n            selectedRows: []\n        }\n    },\n    computed: {\n        rowSelection() {\n            return {\n                onChange: (selectedRowKeys, selectedRows) => {\n                    console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows)\n                },\n                onSelect: (record, selected, selectedRows) => {\n                    console.log(record, selected, selectedRows)\n                    // eslint-disable-next-line vue/no-side-effects-in-computed-properties\n                    this.selectedRows = selectedRows\n                },\n                onSelectAll: (selected, selectedRows, changeRows) => {\n                    // eslint-disable-next-line vue/no-side-effects-in-computed-properties\n                    this.selectedRows = selectedRows\n                    console.log(selected, selectedRows, changeRows)\n                }\n            }\n        }\n    },\n    methods: {\n        paginationChange(pagination, filters, sorter) {\n            console.log('params', pagination, filters, sorter)\n        },\n        showAddModal() {\n            this.publicobj.visible = true\n            this.publicobj.recored = null\n        },\n        edit(recored) {\n          this.publicobj.visible = true\n          this.publicobj.recored = recored\n          console.log(recored)\n        },\n        chooseestate(value) {\n            console.log(value)\n        }\n    },\n    components: {\n        addEdit\n    }\n}\n</script>\n\n<style lang=\"less\" scoped>\n.select {\n    width: 160px;\n}\n.retrievingcontent-icon {\n    position: absolute;\n    top: 50%;\n    right: 10px;\n    transform: translateY(-50%);\n}\n/deep/ input,\n/deep/ .ant-select-selection {\n    border-radius: 4px;\n}\n.setting {\n    margin: 10px 0;\n}\n</style>\n"]}]}