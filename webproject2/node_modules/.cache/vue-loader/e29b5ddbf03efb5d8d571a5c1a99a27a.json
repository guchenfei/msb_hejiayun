{"remainingRequest":"E:\\ideas-test\\webproject\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\ideas-test\\webproject\\src\\views\\propertymanage\\property\\batchAddGuide\\Step3.vue?vue&type=style&index=0&id=3e13437e&lang=less&scoped=true&","dependencies":[{"path":"E:\\ideas-test\\webproject\\src\\views\\propertymanage\\property\\batchAddGuide\\Step3.vue","mtime":1587713614000},{"path":"E:\\ideas-test\\webproject\\node_modules\\css-loader\\dist\\cjs.js","mtime":1655196104040},{"path":"E:\\ideas-test\\webproject\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1655196105840},{"path":"E:\\ideas-test\\webproject\\node_modules\\postcss-loader\\src\\index.js","mtime":1655196104749},{"path":"E:\\ideas-test\\webproject\\node_modules\\less-loader\\dist\\cjs.js","mtime":1655196104499},{"path":"E:\\ideas-test\\webproject\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1655196103443},{"path":"E:\\ideas-test\\webproject\\node_modules\\vue-loader\\lib\\index.js","mtime":1655196105141}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouc3RlcEZvcm1UZXh0IHsKICAgIG1hcmdpbi1ib3R0b206IDI0cHg7CgogICAgLmFudC1mb3JtLWl0ZW0tbGFiZWwsCiAgICAuYW50LWZvcm0taXRlbS1jb250cm9sIHsKICAgICAgICBsaW5lLWhlaWdodDogMjJweDsKICAgIH0KfQo="},{"version":3,"sources":["Step3.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgOA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"Step3.vue","sourceRoot":"src/views/propertymanage/property/batchAddGuide","sourcesContent":["<template>\n  <div>\n    <!-- <a-form-model ref=\"ruleForm\" :model=\"form2\" :label-col=\"labelCol\" :wrapper-col=\"wrapperCol\"> -->\n    <a-row class=\"header\">\n      楼层数量:\n      <a-input style=\"width: 30px;padding: 0;text-align: center;\"></a-input>开始房号:\n      <!-- <a-form-model-item label=\"单元数量：\" prop=\"region\" class=\"units\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\"> -->\n      <a-select v-model=\"form2.region\">\n        <a-select-option value=\"1\">1</a-select-option>\n        <a-select-option value=\"2\">2</a-select-option>\n      </a-select>结束房号:\n      <!-- <a-form-model-item label=\"单元数量：\" prop=\"region\" class=\"units\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\"> -->\n      <a-select v-model=\"form2.region\">\n        <a-select-option value=\"1\">1</a-select-option>\n        <a-select-option value=\"2\">2</a-select-option>\n      </a-select>\n      <!-- </a-form-model-item> -->\n    </a-row>\n    <a-row>\n      <a-table :columns=\"columns\" :dataSource=\"data\" bordered align=\"center\">\n        <template\n          v-for=\"col in [\n            'housecode',\n            'unitcode',\n            'unitname',\n            'startfloor',\n            'endfloor',\n            'startroomnum',\n            'endroomnum',\n            'remark'\n          ]\"\n          :slot=\"col\"\n          slot-scope=\"text, record\"\n        >\n          <div :key=\"col\">\n            <a-input\n              v-if=\"record.editable\"\n              style=\"margin: -5px 0\"\n              :value=\"text\"\n              @change=\"e => handleChange(e.target.value, record.key, col)\"\n            />\n            <template v-else>{{ text }}</template>\n          </div>\n        </template>\n        <template slot=\"operation\" slot-scope=\"text, record\">\n          <div class=\"editable-row-operations\">\n            <span v-if=\"record.editable\">\n              <a @click=\"() => save(record.key)\">保存</a>&nbsp;\n              <a-popconfirm title=\"确认取消吗?\" @confirm=\"() => cancel(record.key)\">\n                <a>取消</a>\n              </a-popconfirm>\n            </span>\n            <span v-else>\n              <a :disabled=\"editingKey !== ''\" @click=\"() => edit(record.key)\">编辑</a>\n            </span>\n          </div>\n        </template>\n      </a-table>\n      <a-row>\n        <a-button type=\"primary\" @click=\"nextStep()\">下一步</a-button>\n      </a-row>\n    </a-row>\n  </div>\n</template>\n\n<script>\nconst columns = [\n    {\n        // 楼宇编码\t单元编码\t单元名称\t开始楼层\t结束楼层\t开始房号\t结束房号\n        align: 'center',\n        title: '楼宇编码',\n        dataIndex: 'housecode',\n        width: '6%',\n        scopedSlots: { customRender: 'housecode' }\n    },\n    {\n        align: 'center',\n        title: '单元编码',\n        dataIndex: 'unitcode',\n        width: '6%',\n        scopedSlots: { customRender: 'unitcode' }\n    },\n    {\n        align: 'center',\n        title: '单元名称',\n        dataIndex: 'unitname',\n        width: '6%',\n        scopedSlots: { customRender: 'unitname' }\n    },\n    {\n        align: 'center',\n        title: '开始楼层',\n        dataIndex: 'startfloor',\n        width: '7%',\n        scopedSlots: { customRender: 'startfloor' }\n    },\n    {\n        align: 'center',\n        title: '结束楼层',\n        dataIndex: 'endfloor',\n        width: '7%',\n        scopedSlots: { customRender: 'endfloor' }\n    },\n    {\n        align: 'center',\n        title: '开始房号',\n        dataIndex: 'startroomnum',\n        width: '7%',\n        scopedSlots: { customRender: 'startroomnum' }\n    },\n    {\n        align: 'center',\n        title: '结束房号',\n        dataIndex: 'endroomnum',\n        width: '7%',\n        scopedSlots: { customRender: 'endroomnum' }\n    },\n    {\n        align: 'center',\n        title: '备注',\n        dataIndex: 'remark',\n        width: '18%',\n        scopedSlots: { customRender: 'remark' }\n    },\n    {\n        align: 'center',\n        title: '编辑',\n        width: '7%',\n        dataIndex: 'operation',\n        scopedSlots: { customRender: 'operation' }\n    }\n]\n\nconst data = []\nfor (let i = 0; i < 10; i++) {\n    data.push({\n        key: i.toString(),\n        housecode: `B-${i + 1}`,\n        unitcode: `U-${i + 1}`,\n        unitname: `${i + 1}单元`,\n        startfloor: 1,\n        endfloor: 8,\n        startroomnum: 1,\n        endroomnum: 2,\n        remark: ''\n    })\n}\nexport default {\n    name: 'Step3',\n    data() {\n        this.cacheData = data.map(item => ({ ...item }))\n        return {\n            labelCol: { span: 2 },\n            wrapperCol: { span: 1 },\n            form2: {\n                name: '',\n                region: undefined,\n                date1: undefined,\n                delivery: false,\n                type: [],\n                resource: '',\n                desc: ''\n            },\n            data,\n            columns,\n            editingKey: ''\n        }\n    },\n    methods: {\n        nextStep() {\n            this.$emit('nextStep')\n        },\n        prevStep() {\n            // this.$emit('prevStep')\n        },\n        handleChange(value, key, column) {\n            const newData = [...this.data]\n            const target = newData.filter(item => key === item.key)[0]\n            if (target) {\n                target[column] = value\n                this.data = newData\n            }\n        },\n        edit(key) {\n            const newData = [...this.data]\n            const target = newData.filter(item => key === item.key)[0]\n            this.editingKey = key\n            if (target) {\n                target.editable = true\n                this.data = newData\n            }\n        },\n        save(key) {\n            console.log(key)\n            const newData = [...this.data]\n            const newCacheData = [...this.cacheData]\n            const target = newData.filter(item => key === item.key)[0]\n            const targetCache = newCacheData.filter(item => key === item.key)[0]\n            if (target && targetCache) {\n                delete target.editable\n                this.data = newData\n                Object.assign(targetCache, target)\n                this.cacheData = newCacheData\n                this.editingKey = ''\n            }\n        },\n        cancel(key) {\n            const newData = [...this.data]\n            const target = newData.filter(item => key === item.key)[0]\n            this.editingKey = ''\n            if (target) {\n                Object.assign(target, this.cacheData.filter(item => key === item.key)[0])\n                delete target.editable\n                this.data = newData\n            }\n        }\n    },\n    beforeDestroy() {\n        //  clearTimeout(this.timer)\n    }\n}\n</script>\n\n<style lang=\"less\" scoped>\n.stepFormText {\n    margin-bottom: 24px;\n\n    .ant-form-item-label,\n    .ant-form-item-control {\n        line-height: 22px;\n    }\n}\n</style>\n"]}]}