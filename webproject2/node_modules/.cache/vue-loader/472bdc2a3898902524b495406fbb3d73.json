{"remainingRequest":"E:\\ideas-test\\webproject\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\ideas-test\\webproject\\src\\views\\account\\settings\\AvatarModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\ideas-test\\webproject\\src\\views\\account\\settings\\AvatarModal.vue","mtime":1587908664000},{"path":"E:\\ideas-test\\webproject\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1655196103443},{"path":"E:\\ideas-test\\webproject\\node_modules\\babel-loader\\lib\\index.js","mtime":1655196104199},{"path":"E:\\ideas-test\\webproject\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1655196103443},{"path":"E:\\ideas-test\\webproject\\node_modules\\vue-loader\\lib\\index.js","mtime":1655196105141}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICAgIGRhdGEoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgdmlzaWJsZTogZmFsc2UsCiAgICAgICAgICAgIGlkOiBudWxsLAogICAgICAgICAgICBjb25maXJtTG9hZGluZzogZmFsc2UsCiAgICAgICAgICAgIGZpbGVMaXN0OiBbXSwKICAgICAgICAgICAgdXBsb2FkaW5nOiBmYWxzZSwKICAgICAgICAgICAgb3B0aW9uczogewogICAgICAgICAgICAgICAgLy8gaW1nOiAnaHR0cHM6Ly96b3MuYWxpcGF5b2JqZWN0cy5jb20vcm1zcG9ydGFsL2pramdrRWZ2cFVQVnlSalVJbW5pVnNsWmZXUG5KdXVaLnBuZycsCiAgICAgICAgICAgICAgICBpbWc6ICcnLAogICAgICAgICAgICAgICAgYXV0b0Nyb3A6IHRydWUsCiAgICAgICAgICAgICAgICBhdXRvQ3JvcFdpZHRoOiAyMDAsCiAgICAgICAgICAgICAgICBhdXRvQ3JvcEhlaWdodDogMjAwLAogICAgICAgICAgICAgICAgZml4ZWRCb3g6IHRydWUKICAgICAgICAgICAgfSwKICAgICAgICAgICAgcHJldmlld3M6IHt9CiAgICAgICAgfQogICAgfSwKICAgIG1ldGhvZHM6IHsKICAgICAgICBlZGl0KGlkKSB7CiAgICAgICAgICAgIHRoaXMudmlzaWJsZSA9IHRydWUKICAgICAgICAgICAgdGhpcy5pZCA9IGlkCiAgICAgICAgICAgIC8qIOiOt+WPluWOn+Wni+WktOWDjyAqLwogICAgICAgIH0sCiAgICAgICAgY2xvc2UoKSB7CiAgICAgICAgICAgIHRoaXMuaWQgPSBudWxsCiAgICAgICAgICAgIHRoaXMudmlzaWJsZSA9IGZhbHNlCiAgICAgICAgfSwKICAgICAgICBjYW5jZWxIYW5kZWwoKSB7CiAgICAgICAgICAgIHRoaXMuY2xvc2UoKQogICAgICAgIH0sCiAgICAgICAgY2hhbmdlU2NhbGUobnVtKSB7CiAgICAgICAgICAgIG51bSA9IG51bSB8fCAxCiAgICAgICAgICAgIHRoaXMuJHJlZnMuY3JvcHBlci5jaGFuZ2VTY2FsZShudW0pCiAgICAgICAgfSwKICAgICAgICByb3RhdGVMZWZ0KCkgewogICAgICAgICAgICB0aGlzLiRyZWZzLmNyb3BwZXIucm90YXRlTGVmdCgpCiAgICAgICAgfSwKICAgICAgICByb3RhdGVSaWdodCgpIHsKICAgICAgICAgICAgdGhpcy4kcmVmcy5jcm9wcGVyLnJvdGF0ZVJpZ2h0KCkKICAgICAgICB9LAogICAgICAgIGJlZm9yZVVwbG9hZChmaWxlKSB7CiAgICAgICAgICAgIGNvbnN0IHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCkKICAgICAgICAgICAgLy8g5oqKQXJyYXkgQnVmZmVy6L2s5YyW5Li6YmxvYiDlpoLmnpzmmK9iYXNlNjTkuI3pnIDopoEKICAgICAgICAgICAgLy8g6L2s5YyW5Li6YmFzZTY0CiAgICAgICAgICAgIHJlYWRlci5yZWFkQXNEYXRhVVJMKGZpbGUpCiAgICAgICAgICAgIHJlYWRlci5vbmxvYWQgPSAoKSA9PiB7CiAgICAgICAgICAgICAgICB0aGlzLm9wdGlvbnMuaW1nID0gcmVhZGVyLnJlc3VsdAogICAgICAgICAgICB9CiAgICAgICAgICAgIC8vIOi9rOWMluS4umJsb2IKICAgICAgICAgICAgLy8gcmVhZGVyLnJlYWRBc0FycmF5QnVmZmVyKGZpbGUpCgogICAgICAgICAgICByZXR1cm4gZmFsc2UKICAgICAgICB9LAoKICAgICAgICAvLyDkuIrkvKDlm77niYfvvIjngrnlh7vkuIrkvKDmjInpkq7vvIkKICAgICAgICBmaW5pc2godHlwZSkgewogICAgICAgICAgICBjb25zb2xlLmxvZygnZmluaXNoJykKICAgICAgICAgICAgY29uc3QgX3RoaXMgPSB0aGlzCiAgICAgICAgICAgIGNvbnN0IGZvcm1EYXRhID0gbmV3IEZvcm1EYXRhKCkKICAgICAgICAgICAgLy8g6L6T5Ye6CiAgICAgICAgICAgIGlmICh0eXBlID09PSAnYmxvYicpIHsKICAgICAgICAgICAgICAgIHRoaXMuJHJlZnMuY3JvcHBlci5nZXRDcm9wQmxvYihkYXRhID0+IHsKICAgICAgICAgICAgICAgICAgICBjb25zdCBpbWcgPSB3aW5kb3cuVVJMLmNyZWF0ZU9iamVjdFVSTChkYXRhKQogICAgICAgICAgICAgICAgICAgIHRoaXMubW9kZWwgPSB0cnVlCiAgICAgICAgICAgICAgICAgICAgdGhpcy5tb2RlbFNyYyA9IGltZwogICAgICAgICAgICAgICAgICAgIGZvcm1EYXRhLmFwcGVuZCgnZmlsZScsIGRhdGEsIHRoaXMuZmlsZU5hbWUpCiAgICAgICAgICAgICAgICAgICAgdGhpcy4kaHR0cAogICAgICAgICAgICAgICAgICAgICAgICAucG9zdCgnaHR0cHM6Ly93d3cubW9ja3kuaW8vdjIvNWNjODAxOWQzMDAwMDA5ODBhMDU1ZTc2JywgZm9ybURhdGEsIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnRUeXBlOiBmYWxzZSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByb2Nlc3NEYXRhOiBmYWxzZSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlYWRlcnM6IHsgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQnIH0KICAgICAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgICAgICAgICAgLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ3VwbG9hZCByZXNwb25zZTonLCByZXNwb25zZSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIHZhciByZXMgPSByZXNwb25zZS5kYXRhCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBpZiAocmVzcG9uc2Uuc3RhdHVzID09PSAnZG9uZScpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgX3RoaXMuaW1nRmlsZSA9ICcnCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyAgIF90aGlzLmhlYWRJbWcgPSByZXMucmVhbFBhdGhMaXN0WzBdIC8vIOWujOaVtOi3r+W+hAogICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gICBfdGhpcy51cGxvYWRJbWdSZWxhUGF0aCA9IHJlcy5yZWxhUGF0aExpc3RbMF0gLy8g6Z2e5a6M5pW06Lev5b6ECiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyAgIF90aGlzLiRtZXNzYWdlLnN1Y2Nlc3MoJ+S4iuS8oOaIkOWKnycpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyAgIHRoaXMudmlzaWJsZSA9IGZhbHNlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdGhpcy4kbWVzc2FnZS5zdWNjZXNzKCfkuIrkvKDmiJDlip8nKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgX3RoaXMuJGVtaXQoJ29rJywgcmVzcG9uc2UudXJsKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgX3RoaXMudmlzaWJsZSA9IGZhbHNlCiAgICAgICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgdGhpcy4kcmVmcy5jcm9wcGVyLmdldENyb3BEYXRhKGRhdGEgPT4gewogICAgICAgICAgICAgICAgICAgIHRoaXMubW9kZWwgPSB0cnVlCiAgICAgICAgICAgICAgICAgICAgdGhpcy5tb2RlbFNyYyA9IGRhdGEKICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIG9rSGFuZGVsKCkgewogICAgICAgICAgICBjb25zdCB2bSA9IHRoaXMKCiAgICAgICAgICAgIHZtLmNvbmZpcm1Mb2FkaW5nID0gdHJ1ZQogICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHsKICAgICAgICAgICAgICAgIHZtLmNvbmZpcm1Mb2FkaW5nID0gZmFsc2UKICAgICAgICAgICAgICAgIHZtLmNsb3NlKCkKICAgICAgICAgICAgICAgIHZtLiRtZXNzYWdlLnN1Y2Nlc3MoJ+S4iuS8oOWktOWDj+aIkOWKnycpCiAgICAgICAgICAgIH0sIDIwMDApCiAgICAgICAgfSwKCiAgICAgICAgcmVhbFRpbWUoZGF0YSkgewogICAgICAgICAgICB0aGlzLnByZXZpZXdzID0gZGF0YQogICAgICAgIH0KICAgIH0KfQo="},{"version":3,"sources":["AvatarModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAufile":"AvatarModal.vue","sourceRoot":"src/views/account/settings","sourcesContent":["<template>\n  <a-modal\n    title=\"修改头像\"\n    :visible=\"visible\"\n    :maskClosable=\"false\"\n    :confirmLoading=\"confirmLoading\"\n    :width=\"800\"\n    :footer=\"null\"\n    @cancel=\"cancelHandel\"\n  >\n    <a-row>\n      <a-col :xs=\"24\" :md=\"12\" :style=\"{height: '350px'}\">\n        <vue-cropper\n          ref=\"cropper\"\n          :img=\"options.img\"\n          :info=\"true\"\n          :autoCrop=\"options.autoCrop\"\n          :autoCropWidth=\"options.autoCropWidth\"\n          :autoCropHeight=\"options.autoCropHeight\"\n          :fixedBox=\"options.fixedBox\"\n          @realTime=\"realTime\"\n        ></vue-cropper>\n      </a-col>\n      <a-col :xs=\"24\" :md=\"12\" :style=\"{height: '350px'}\">\n        <div class=\"avatar-upload-preview\">\n          <img :src=\"previews.url\" :style=\"previews.img\" />\n        </div>\n      </a-col>\n    </a-row>\n    <br />\n    <a-row>\n      <a-col :lg=\"2\" :md=\"2\">\n        <a-upload name=\"file\" :beforeUpload=\"beforeUpload\" :showUploadList=\"false\">\n          <a-button icon=\"upload\">选择图片</a-button>\n        </a-upload>\n      </a-col>\n      <a-col :lg=\"{span: 1, offset: 2}\" :md=\"2\">\n        <a-button icon=\"plus\" @click=\"changeScale(1)\" />\n      </a-col>\n      <a-col :lg=\"{span: 1, offset: 1}\" :md=\"2\">\n        <a-button icon=\"minus\" @click=\"changeScale(-1)\" />\n      </a-col>\n      <a-col :lg=\"{span: 1, offset: 1}\" :md=\"2\">\n        <a-button icon=\"undo\" @click=\"rotateLeft\" />\n      </a-col>\n      <a-col :lg=\"{span: 1, offset: 1}\" :md=\"2\">\n        <a-button icon=\"redo\" @click=\"rotateRight\" />\n      </a-col>\n      <a-col :lg=\"{span: 2, offset: 6}\" :md=\"2\">\n        <a-button type=\"primary\" @click=\"finish('blob')\">保存</a-button>\n      </a-col>\n    </a-row>\n  </a-modal>\n</template>\n<script>\nexport default {\n    data() {\n        return {\n            visible: false,\n            id: null,\n            confirmLoading: false,\n            fileList: [],\n            uploading: false,\n            options: {\n                // img: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\n                img: '',\n                autoCrop: true,\n                autoCropWidth: 200,\n                autoCropHeight: 200,\n                fixedBox: true\n            },\n            previews: {}\n        }\n    },\n    methods: {\n        edit(id) {\n            this.visible = true\n            this.id = id\n            /* 获取原始头像 */\n        },\n        close() {\n            this.id = null\n            this.visible = false\n        },\n        cancelHandel() {\n            this.close()\n        },\n        changeScale(num) {\n            num = num || 1\n            this.$refs.cropper.changeScale(num)\n        },\n        rotateLeft() {\n            this.$refs.cropper.rotateLeft()\n        },\n        rotateRight() {\n            this.$refs.cropper.rotateRight()\n        },\n        beforeUpload(file) {\n            const reader = new FileReader()\n            // 把Array Buffer转化为blob 如果是base64不需要\n            // 转化为base64\n            reader.readAsDataURL(file)\n            reader.onload = () => {\n                this.options.img = reader.result\n            }\n            // 转化为blob\n            // reader.readAsArrayBuffer(file)\n\n            return false\n        },\n\n        // 上传图片（点击上传按钮）\n        finish(type) {\n            console.log('finish')\n            const _this = this\n            const formData = new FormData()\n            // 输出\n            if (type === 'blob') {\n                this.$refs.cropper.getCropBlob(data => {\n                    const img = window.URL.createObjectURL(data)\n                    this.model = true\n                    this.modelSrc = img\n                    formData.append('file', data, this.fileName)\n                    this.$http\n                        .post('https://www.mocky.io/v2/5cc8019d300000980a055e76', formData, {\n                            contentType: false,\n                            processData: false,\n                            headers: { 'Content-Type': 'application/x-www-form-urlencoded' }\n                        })\n                        .then(response => {\n                            console.log('upload response:', response)\n                            // var res = response.data\n                            // if (response.status === 'done') {\n                            //   _this.imgFile = ''\n                            //   _this.headImg = res.realPathList[0] // 完整路径\n                            //   _this.uploadImgRelaPath = res.relaPathList[0] // 非完整路径\n                            //   _this.$message.success('上传成功')\n                            //   this.visible = false\n                            // }\n                            _this.$message.success('上传成功')\n                            _this.$emit('ok', response.url)\n                            _this.visible = false\n                        })\n                })\n            } else {\n                this.$refs.cropper.getCropData(data => {\n                    this.model = true\n                    this.modelSrc = data\n                })\n            }\n        },\n        okHandel() {\n            const vm = this\n\n            vm.confirmLoading = true\n            setTimeout(() => {\n                vm.confirmLoading = false\n                vm.close()\n                vm.$message.success('上传头像成功')\n            }, 2000)\n        },\n\n        realTime(data) {\n            this.previews = data\n        }\n    }\n}\n</script>\n\n<style lang=\"less\" scoped>\n.avatar-upload-preview {\n    position: absolute;\n    top: 50%;\n    transform: translate(50%, -50%);\n    width: 180px;\n    height: 180px;\n    border-radius: 50%;\n    box-shadow: 0 0 4px #ccc;\n    overflow: hidden;\n\n    img {\n        width: 100%;\n        height: 100%;\n    }\n}\n</style>\n"]}]}