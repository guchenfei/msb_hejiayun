{"remainingRequest":"E:\\ideas-test\\webproject\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\ideas-test\\webproject\\src\\views\\propertymanage\\property\\addGuide\\Step4.vue?vue&type=style&index=0&id=76084493&lang=less&scoped=true&","dependencies":[{"path":"E:\\ideas-test\\webproject\\src\\views\\propertymanage\\property\\addGuide\\Step4.vue","mtime":1655219662979},{"path":"E:\\ideas-test\\webproject\\node_modules\\css-loader\\dist\\cjs.js","mtime":1655196104040},{"path":"E:\\ideas-test\\webproject\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1655196105840},{"path":"E:\\ideas-test\\webproject\\node_modules\\postcss-loader\\src\\index.js","mtime":1655196104749},{"path":"E:\\ideas-test\\webproject\\node_modules\\less-loader\\dist\\cjs.js","mtime":1655196104499},{"path":"E:\\ideas-test\\webproject\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1655196103443},{"path":"E:\\ideas-test\\webproject\\node_modules\\vue-loader\\lib\\index.js","mtime":1655196105141}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnN0ZXBGb3JtVGV4dCB7CiAgICBtYXJnaW4tYm90dG9tOiAyNHB4OwoKICAgIC5hbnQtZm9ybS1pdGVtLWxhYmVsLAogICAgLmFudC1mb3JtLWl0ZW0tY29udHJvbCB7CiAgICAgICAgbGluZS1oZWlnaHQ6IDIycHg7CiAgICB9Cn0K"},{"version":3,"sources":["Step4.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+PA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"Step4.vue","sourceRoot":"src/views/propertymanage/property/addGuide","sourcesContent":["<template>\n  <div>\n    <!-- <a-form-model ref=\"ruleForm\" :model=\"form2\" :label-col=\"labelCol\" :wrapper-col=\"wrapperCol\"> -->\n    <a-row class=\"header\">\n      选择楼宇:\n      <a-select v-model=\"form2.building\" @change=\"changeBuilding\">\n        <a-select-option :key=\"index\" :value=\"item.buildingCode\" v-for=\"(item, index) in buildingSelect\">{{ item.buildingName }}</a-select-option>\n      </a-select>选择单元:\n      <a-select v-model=\"form2.unit\" @change=\"changeUnit\">\n        <a-select-option :key=\"index\" :value=\"item.unitCode\" v-for=\"(item, index) in unitSelect\">{{ item.unitName }}</a-select-option>\n      </a-select>建筑面积:\n      <a-input style=\"width: 40px;padding: 0;text-align: center;\"></a-input>使用面积:\n      <a-input style=\"width: 40px;padding: 0;text-align: center;\"></a-input>\n    </a-row>\n    <a-row>\n      <a-table :columns=\"columns\" :dataSource=\"data\" bordered align=\"center\">\n        <template\n          v-for=\"col in [\n            'floorNumber',\n            'unitCode',\n            'cellCode',\n            'cellName',\n            'cellBuildArea',\n            'cellUsedArea',\n            'remark'\n          ]\"\n          :slot=\"col\"\n          slot-scope=\"text, record\"\n        >\n          <div :key=\"col\">\n            <a-input\n              v-if=\"record.editable\"\n              style=\"margin: -5px 0\"\n              :value=\"text\"\n              @change=\"e => handleChange(e.target.value, record.key, col)\"\n            />\n            <template v-else>{{ text }}</template>\n          </div>\n        </template>\n        <template slot=\"operation\" slot-scope=\"text, record\">\n          <div class=\"editable-row-operations\">\n            <span v-if=\"record.editable\">\n              <a @click=\"() => save(record.key)\">保存</a>&nbsp;\n              <a-popconfirm title=\"确认取消吗?\" @confirm=\"() => cancel(record.key)\">\n                <a>取消</a>\n              </a-popconfirm>\n            </span>\n            <span v-else>\n              <a :disabled=\"editingKey !== ''\" @click=\"() => edit(record.key)\">编辑</a>\n            </span>\n          </div>\n        </template>\n      </a-table>\n      <a-row>\n        <a-button type=\"primary\" @click=\"nextStep()\">下一步</a-button>&nbsp;\n        <a-button type=\"primary\" @click=\"prevStep()\">上一步</a-button>\n      </a-row>\n    </a-row>\n  </div>\n</template>\n\n<script>\nimport { insertCell, selectBuildingByEstate, selectUnitByBuildingCode, selectCell } from '@/api/estate'\nconst QS = require('qs')\nconst columns = [\n    {\n        align: 'center',\n        title: '楼层数',\n        dataIndex: 'floorNumber',\n        width: '6%',\n        scopedSlots: { customRender: 'floorNumber' }\n    },\n    {\n        align: 'center',\n        title: '单元编码',\n        dataIndex: 'unitCode',\n        width: '6%',\n        scopedSlots: { customRender: 'unitCode' }\n    },\n    {\n        align: 'center',\n        title: '房间编码',\n        dataIndex: 'cellCode',\n        width: '6%',\n        scopedSlots: { customRender: 'cellCode' }\n    },\n    {\n        align: 'center',\n        title: '房间名称',\n        dataIndex: 'cellName',\n        width: '6%',\n        scopedSlots: { customRender: 'cellName' }\n    },\n    {\n        align: 'center',\n        title: '建筑面积',\n        dataIndex: 'cellBuildArea',\n        width: '6%',\n        scopedSlots: { customRender: 'cellBuildArea' }\n    },\n    {\n        align: 'center',\n        title: '使用面积',\n        dataIndex: 'cellUsedArea',\n        width: '7%',\n        scopedSlots: { customRender: 'cellUsedArea' }\n    },\n    {\n        align: 'center',\n        title: '备注',\n        dataIndex: 'remark',\n        width: '38%',\n        scopedSlots: { customRender: 'remark' }\n    },\n    {\n        align: 'center',\n        title: '编辑',\n        width: '7%',\n        dataIndex: 'operation',\n        scopedSlots: { customRender: 'operation' }\n    }\n]\n\nconst data = []\nexport default {\n    name: 'Step4',\n    data() {\n        return {\n            labelCol: { span: 2 },\n            wrapperCol: { span: 1 },\n            form2: {\n                name: '',\n                region: undefined,\n                building: [],\n                unit: [],\n                date1: undefined,\n                delivery: false,\n                type: [],\n                resource: '',\n                desc: ''\n            },\n            data,\n            columns,\n            editingKey: '',\n            buildingSelect: [],\n            unitSelect: []\n        }\n    },\n    created() {\n        // 插入所有的房间并且数据回显\n        insertCell(this.$store.state.threeStep.cellMessage).then(res => {\n            const result = res.result\n            for (let i = 0; i < result.length; i++) {\n                const cell = result[i]\n                data.push({\n                    key: cell.id,\n                    floorNumber: cell.floorNumber,\n                    unitCode: cell.unitCode,\n                    cellCode: cell.cellCode,\n                    cellName: cell.cellName,\n                    cellBuildArea: cell.cellBuildArea,\n                    cellUsedArea: cell.cellUsedArea,\n                    remark: cell.remark\n                })\n            }\n            this.cacheData = data.map(item => ({ ...item }))\n        })\n        // 查询所有的楼宇信息，并且有选择性的显示\n        selectBuildingByEstate(QS.stringify({ estateCode: this.$store.state.threeStep.estateCode })).then(res => {\n            this.buildingSelect = res.result\n        })\n    },\n    methods: {\n        changeUnit() {\n            selectCell(QS.stringify({ unitCode: this.form2.unit })).then(res => {\n                const result = res.result\n                const myData = []\n                for (let i = 0; i < result.length; i++) {\n                    const cell = result[i]\n                    myData.push({\n                        key: cell.id,\n                        floorNumber: cell.floorNumber,\n                        unitCode: cell.unitCode,\n                        cellCode: cell.cellCode,\n                        cellName: cell.cellName,\n                        cellBuildArea: cell.cellBuildArea,\n                        cellUsedArea: cell.cellUsedArea,\n                        remark: cell.result\n                    })\n                }\n                this.data = myData\n                this.cacheData = this.data.map(item => ({ ...item }))\n            })\n        },\n        changeBuilding() {\n            selectUnitByBuildingCode(QS.stringify({ buildingCode: this.form2.building })).then(res => {\n                this.unitSelect = res.result\n            })\n        },\n        nextStep() {\n            this.$emit('nextStep')\n            console.log(33)\n        },\n        prevStep() {\n            this.$emit('prevStep')\n        },\n        handleChange(value, key, column) {\n            const newData = [...this.data]\n            const target = newData.filter(item => key === item.key)[0]\n            if (target) {\n                target[column] = value\n                this.data = newData\n            }\n        },\n        edit(key) {\n            const newData = [...this.data]\n            const target = newData.filter(item => key === item.key)[0]\n            this.editingKey = key\n            if (target) {\n                target.editable = true\n                this.data = newData\n            }\n        },\n        save(key) {\n            console.log(key)\n            const newData = [...this.data]\n            const newCacheData = [...this.cacheData]\n            const target = newData.filter(item => key === item.key)[0]\n            const targetCache = newCacheData.filter(item => key === item.key)[0]\n            if (target && targetCache) {\n                delete target.editable\n                this.data = newData\n                Object.assign(targetCache, target)\n                this.cacheData = newCacheData\n                this.editingKey = ''\n            }\n        },\n        cancel(key) {\n            const newData = [...this.data]\n            const target = newData.filter(item => key === item.key)[0]\n            this.editingKey = ''\n            if (target) {\n                Object.assign(target, this.cacheData.filter(item => key === item.key)[0])\n                delete target.editable\n                this.data = newData\n            }\n        }\n    },\n    beforeDestroy() {\n        //  clearTimeout(this.timer)\n    }\n}\n</script>\n\n<style lang=\"less\" scoped>\n.stepFormText {\n    margin-bottom: 24px;\n\n    .ant-form-item-label,\n    .ant-form-item-control {\n        line-height: 22px;\n    }\n}\n</style>\n"]}]}