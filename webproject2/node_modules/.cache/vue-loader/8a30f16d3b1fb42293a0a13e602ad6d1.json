{"remainingRequest":"E:\\ideas-test\\webproject\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\ideas-test\\webproject\\src\\layouts\\RouteView.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\ideas-test\\webproject\\src\\layouts\\RouteView.vue","mtime":1587193626000},{"path":"E:\\ideas-test\\webproject\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1655196103443},{"path":"E:\\ideas-test\\webproject\\node_modules\\babel-loader\\lib\\index.js","mtime":1655196104199},{"path":"E:\\ideas-test\\webproject\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1655196103443},{"path":"E:\\ideas-test\\webproject\\node_modules\\vue-loader\\lib\\index.js","mtime":1655196105141}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQpleHBvcnQgZGVmYXVsdCB7DQogICAgbmFtZTogJ1JvdXRlVmlldycsDQogICAgcHJvcHM6IHsNCiAgICAgICAga2VlcEFsaXZlOiB7DQogICAgICAgICAgICB0eXBlOiBCb29sZWFuLA0KICAgICAgICAgICAgZGVmYXVsdDogdHJ1ZQ0KICAgICAgICB9DQogICAgfSwNCiAgICBkYXRhKCkgew0KICAgICAgICByZXR1cm4ge30NCiAgICB9LA0KICAgIHJlbmRlcigpIHsNCiAgICAgICAgY29uc3Qgew0KICAgICAgICAgICAgJHJvdXRlOiB7IG1ldGEgfSwNCiAgICAgICAgICAgICRzdG9yZTogeyBnZXR0ZXJzIH0NCiAgICAgICAgfSA9IHRoaXMNCiAgICAgICAgY29uc3QgaW5LZWVwID0gKA0KICAgICAgICAgICAgPGtlZXAtYWxpdmU+DQogICAgICAgICAgICAgICAgPHJvdXRlci12aWV3IC8+DQogICAgICAgICAgICA8L2tlZXAtYWxpdmU+DQogICAgICAgICkNCiAgICAgICAgY29uc3Qgbm90S2VlcCA9IDxyb3V0ZXItdmlldyAvPg0KICAgICAgICAvLyDov5nph4zlop7liqDkuoYgbXVsdGlUYWIg55qE5Yik5pat77yM5b2T5byA5ZCv5LqGIG11bHRpVGFiIOaXtg0KICAgICAgICAvLyDlupTlvZPlhajpg6jnu4Tku7bnmobnvJPlrZjvvIzlkKbliJnkvJrlr7zoh7TliIfmjaLpobXpnaLlkI7pobXpnaLov5jljp/miJDljp/lp4vnirbmgIENCiAgICAgICAgLy8g6Iul56Gu5a6e5LiN6ZyA6KaB77yM5Y+v5pS55Li6IHJldHVybiBtZXRhLmtlZXBBbGl2ZSA/IGluS2VlcCA6IG5vdEtlZXANCiAgICAgICAgaWYgKCFnZXR0ZXJzLm11bHRpVGFiICYmICFtZXRhLmtlZXBBbGl2ZSkgew0KICAgICAgICAgICAgcmV0dXJuIG5vdEtlZXANCiAgICAgICAgfQ0KICAgICAgICByZXR1cm4gdGhpcy5rZWVwQWxpdmUgfHwgZ2V0dGVycy5tdWx0aVRhYiB8fCBtZXRhLmtlZXBBbGl2ZSA/IGluS2VlcCA6IG5vdEtlZXANCiAgICB9DQp9DQo="},{"version":3,"sources":["RouteView.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"RouteView.vue","sourceRoot":"src/layouts","sourcesContent":["<script>\r\nexport default {\r\n    name: 'RouteView',\r\n    props: {\r\n        keepAlive: {\r\n            type: Boolean,\r\n            default: true\r\n        }\r\n    },\r\n    data() {\r\n        return {}\r\n    },\r\n    render() {\r\n        const {\r\n            $route: { meta },\r\n            $store: { getters }\r\n        } = this\r\n        const inKeep = (\r\n            <keep-alive>\r\n                <router-view />\r\n            </keep-alive>\r\n        )\r\n        const notKeep = <router-view />\r\n        // 这里增加了 multiTab 的判断，当开启了 multiTab 时\r\n        // 应当全部组件皆缓存，否则会导致切换页面后页面还原成原始状态\r\n        // 若确实不需要，可改为 return meta.keepAlive ? inKeep : notKeep\r\n        if (!getters.multiTab && !meta.keepAlive) {\r\n            return notKeep\r\n        }\r\n        return this.keepAlive || getters.multiTab || meta.keepAlive ? inKeep : notKeep\r\n    }\r\n}\r\n</script>\r\n"]}]}