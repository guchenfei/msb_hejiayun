{"remainingRequest":"E:\\ideas-test\\webproject\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\ideas-test\\webproject\\src\\views\\propertymanage\\property\\addGuide\\Step3.vue?vue&type=style&index=0&id=75fa2d12&lang=less&scoped=true&","dependencies":[{"path":"E:\\ideas-test\\webproject\\src\\views\\propertymanage\\property\\addGuide\\Step3.vue","mtime":1655114242000},{"path":"E:\\ideas-test\\webproject\\node_modules\\css-loader\\dist\\cjs.js","mtime":1655196104040},{"path":"E:\\ideas-test\\webproject\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1655196105840},{"path":"E:\\ideas-test\\webproject\\node_modules\\postcss-loader\\src\\index.js","mtime":1655196104749},{"path":"E:\\ideas-test\\webproject\\node_modules\\less-loader\\dist\\cjs.js","mtime":1655196104499},{"path":"E:\\ideas-test\\webproject\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1655196103443},{"path":"E:\\ideas-test\\webproject\\node_modules\\vue-loader\\lib\\index.js","mtime":1655196105141}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouc3RlcEZvcm1UZXh0IHsKICAgIG1hcmdpbi1ib3R0b206IDI0cHg7CgogICAgLmFudC1mb3JtLWl0ZW0tbGFiZWwsCiAgICAuYW50LWZvcm0taXRlbS1jb250cm9sIHsKICAgICAgICBsaW5lLWhlaWdodDogMjJweDsKICAgIH0KfQo="},{"version":3,"sources":["Step3.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiTA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"Step3.vue","sourceRoot":"src/views/propertymanage/property/addGuide","sourcesContent":["<template>\n  <div>\n    <!-- <a-form-model ref=\"ruleForm\" :model=\"form2\" :label-col=\"labelCol\" :wrapper-col=\"wrapperCol\"> -->\n    <a-row class=\"header\">\n      楼层数量:\n      <a-input style=\"width: 30px;padding: 0;text-align: center;\" v-model=\"form2.floorNumber\" @blur=\"changeFloor\"></a-input>开始房号:\n      <!-- <a-form-model-item label=\"单元数量：\" prop=\"region\" class=\"units\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\"> -->\n      <a-select v-model=\"form2.startCell\" @change=\"changeStartCell\">\n        <a-select-option value=\"1\">1</a-select-option>\n        <a-select-option value=\"2\">2</a-select-option>\n        <a-select-option value=\"3\">3</a-select-option>\n        <a-select-option value=\"4\">4</a-select-option>\n        <a-select-option value=\"5\">5</a-select-option>\n      </a-select>结束房号:\n      <!-- <a-form-model-item label=\"单元数量：\" prop=\"region\" class=\"units\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\"> -->\n      <a-select v-model=\"form2.stopCell\" @change=\"changeStopCell\">\n        <a-select-option value=\"1\">1</a-select-option>\n        <a-select-option value=\"2\">2</a-select-option>\n        <a-select-option value=\"3\">3</a-select-option>\n        <a-select-option value=\"4\">4</a-select-option>\n        <a-select-option value=\"5\">5</a-select-option>\n      </a-select>\n      <!-- </a-form-model-item> -->\n    </a-row>\n    <a-row>\n      <a-table :columns=\"columns\" :dataSource=\"data\" bordered align=\"center\">\n        <template\n          v-for=\"col in [\n            'buildingCode',\n            'unitCode',\n            'unitName',\n            'startFloor',\n            'stopFloor',\n            'startCellId',\n            'stopCellId',\n            'remark'\n          ]\"\n          :slot=\"col\"\n          slot-scope=\"text, record\"\n        >\n          <div :key=\"col\">\n            <a-input\n              v-if=\"record.editable\"\n              style=\"margin: -5px 0\"\n              :value=\"text\"\n              @change=\"e => handleChange(e.target.value, record.key, col)\"\n            />\n            <template v-else>{{ text }}</template>\n          </div>\n        </template>\n        <template slot=\"operation\" slot-scope=\"text, record\">\n          <div class=\"editable-row-operations\">\n            <span v-if=\"record.editable\">\n              <a @click=\"() => save(record.key)\">保存</a>&nbsp;\n              <a-popconfirm title=\"确认取消吗?\" @confirm=\"() => cancel(record.key)\">\n                <a>取消</a>\n              </a-popconfirm>\n            </span>\n            <span v-else>\n              <a :disabled=\"editingKey !== ''\" @click=\"() => edit(record.key)\">编辑</a>\n            </span>\n          </div>\n        </template>\n      </a-table>\n      <a-row>\n        <a-button type=\"primary\" @click=\"nextStep()\">下一步</a-button>&nbsp;\n        <a-button type=\"primary\" @click=\"prevStep()\">上一步</a-button>\n      </a-row>\n    </a-row>\n  </div>\n</template>\n\n<script>\nimport { selectUnit, updateUnit } from '@/api/estate'\nconst QS = require('qs')\nconst columns = [\n    {\n        align: 'center',\n        title: '楼宇编码',\n        dataIndex: 'buildingCode',\n        width: '6%',\n        scopedSlots: { customRender: 'buildingCode' }\n    },\n    {\n        align: 'center',\n        title: '单元编码',\n        dataIndex: 'unitCode',\n        width: '6%',\n        scopedSlots: { customRender: 'unitCode' }\n    },\n    {\n        align: 'center',\n        title: '单元名称',\n        dataIndex: 'unitName',\n        width: '6%',\n        scopedSlots: { customRender: 'unitName' }\n    },\n    {\n        align: 'center',\n        title: '开始楼层',\n        dataIndex: 'startFloor',\n        width: '7%',\n        scopedSlots: { customRender: 'startFloor' }\n    },\n    {\n        align: 'center',\n        title: '结束楼层',\n        dataIndex: 'stopFloor',\n        width: '7%',\n        scopedSlots: { customRender: 'stopFloor' }\n    },\n    {\n        align: 'center',\n        title: '开始房号',\n        dataIndex: 'startCellId',\n        width: '7%',\n        scopedSlots: { customRender: 'startCellId' }\n    },\n    {\n        align: 'center',\n        title: '结束房号',\n        dataIndex: 'stopCellId',\n        width: '7%',\n        scopedSlots: { customRender: 'stopCellId' }\n    },\n    {\n        align: 'center',\n        title: '备注',\n        dataIndex: 'remark',\n        width: '18%',\n        scopedSlots: { customRender: 'remark' }\n    },\n    {\n        align: 'center',\n        title: '编辑',\n        width: '7%',\n        dataIndex: 'operation',\n        scopedSlots: { customRender: 'operation' }\n    }\n]\n\nconst data = []\nexport default {\n    name: 'Step3',\n    data() {\n        return {\n            labelCol: { span: 2 },\n            wrapperCol: { span: 1 },\n            form2: {\n                name: '',\n                region: undefined,\n                floorNumber: '',\n                startCell: '',\n                stopCell: '',\n                date1: undefined,\n                delivery: false,\n                type: [],\n                resource: '',\n                desc: ''\n            },\n            data,\n            columns,\n            editingKey: ''\n        }\n    },\n    created() {\n        selectUnit(this.$store.state.twoStep.unitMessage).then(res => {\n            const result = res.result\n            const myData = []\n            for (let i = 0; i < result.length; i++) {\n                const unit = result[i]\n                myData.push({\n                    key: unit.id,\n                    buildingCode: unit.buildingCode,\n                    unitCode: unit.unitCode,\n                    unitName: unit.unitName,\n                    startFloor: unit.startFloor,\n                    stopFloor: unit.stopFloor,\n                    startCellId: unit.startCellId,\n                    stopCellId: unit.stopCellId,\n                    remark: unit.remark\n                })\n            }\n            this.data = myData\n            this.cacheData = this.data.map(item => ({ ...item }))\n        }).catch(err => {\n            this.$notification.success({\n                message: '失败',\n                description: err.result\n            })\n        })\n    },\n    methods: {\n        changeFloor() {\n          const floorNumber = this.form2.floorNumber\n          for (let i = 0; i < this.data.length; i++) {\n              this.data[i].startFloor = 1\n              this.data[i].stopFloor = floorNumber\n          }\n        },\n        changeStartCell() {\n            const startCell = this.form2.startCell\n            console.log('----' + startCell)\n            for (let i = 0; i < this.data.length; i++) {\n                this.data[i].startCellId = startCell\n            }\n        },\n        changeStopCell() {\n            const stopCell = this.form2.stopCell\n            for (let i = 0; i < this.data.length; i++) {\n                this.data[i].stopCellId = stopCell\n            }\n        },\n        nextStep() {\n            const dataArray = this.data\n            var param = '['\n            for (let i = 0; i < dataArray.length; i++) {\n                if (i !== dataArray.length - 1) {\n                    param += '{ \"unitCode\": \"' + dataArray[i].unitCode + '\", \"startFloor\": ' + dataArray[i].startFloor + ', \"stopFloor\": ' + dataArray[i].stopFloor + ', \"startCellId\": ' + dataArray[i].startCellId + ', \"stopCellId\": ' + dataArray[i].stopCellId + '},'\n                } else {\n                    param += '{ \"unitCode\": \"' + dataArray[i].unitCode + '\", \"startFloor\": ' + dataArray[i].startFloor + ', \"stopFloor\": ' + dataArray[i].stopFloor + ', \"startCellId\": ' + dataArray[i].startCellId + ', \"stopCellId\": ' + dataArray[i].stopCellId + '}]'\n                }\n            }\n            this.$store.commit('SET_TITLE', {\n                cellMessage: param,\n                estateCode: this.$store.state.twoStep.estateCode\n            })\n            this.$emit('nextStep')\n        },\n        prevStep() {\n            this.$emit('prevStep')\n        },\n        handleChange(value, key, column) {\n            const newData = [...this.data]\n            const target = newData.filter(item => key === item.key)[0]\n            if (target) {\n                target[column] = value\n                this.data = newData\n            }\n        },\n        edit(key) {\n            const newData = [...this.data]\n            const target = newData.filter(item => key === item.key)[0]\n            this.editingKey = key\n            if (target) {\n                target.editable = true\n                this.data = newData\n            }\n        },\n        save(key) {\n            console.log(key)\n            const newData = [...this.data]\n            const newCacheData = [...this.cacheData]\n            const target = newData.filter(item => key === item.key)[0]\n            const targetCache = newCacheData.filter(item => key === item.key)[0]\n            if (target && targetCache) {\n                delete target.editable\n                this.data = newData\n                Object.assign(targetCache, target)\n                this.cacheData = newCacheData\n                this.editingKey = ''\n            }\n            // 获取key值\n            target.id = key\n            const param = QS.stringify(target)\n            // 完成房间编号的判断逻辑，弹窗显示\n            // if (target.startCellId > target.stopCellId) {\n            //    //\n            // } else {\n            //     updateUnit(param)\n            // }\n            updateUnit(param).then(res => {\n                setTimeout(() => {\n                    this.$notification.success({\n                        message: '恭喜',\n                        description: res.result\n                    })\n                }, 1000)\n            }).catch(err => {\n                setTimeout(() => {\n                    this.$notification.err({\n                        message: '抱歉',\n                        description: err.result\n                    })\n                }, 1000)\n            })\n        },\n        cancel(key) {\n            const newData = [...this.data]\n            const target = newData.filter(item => key === item.key)[0]\n            this.editingKey = ''\n            if (target) {\n                Object.assign(target, this.cacheData.filter(item => key === item.key)[0])\n                delete target.editable\n                this.data = newData\n            }\n        }\n    },\n    beforeDestroy() {\n        //  clearTimeout(this.timer)\n    }\n}\n</script>\n\n<style lang=\"less\" scoped>\n.stepFormText {\n    margin-bottom: 24px;\n\n    .ant-form-item-label,\n    .ant-form-item-control {\n        line-height: 22px;\n    }\n}\n</style>\n"]}]}