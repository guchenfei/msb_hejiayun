{"remainingRequest":"E:\\ideas-test\\webproject\\node_modules\\babel-loader\\lib\\index.js!E:\\ideas-test\\webproject\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!E:\\ideas-test\\webproject\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\ideas-test\\webproject\\src\\components\\Ellipsis\\Ellipsis.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\ideas-test\\webproject\\src\\components\\Ellipsis\\Ellipsis.vue","mtime":1587193626000},{"path":"E:\\ideas-test\\webproject\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1655196103443},{"path":"E:\\ideas-test\\webproject\\node_modules\\babel-loader\\lib\\index.js","mtime":1655196104199},{"path":"E:\\ideas-test\\webproject\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1655196103443},{"path":"E:\\ideas-test\\webproject\\node_modules\\vue-loader\\lib\\index.js","mtime":1655196105141}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuam9pbi5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyI7CmltcG9ydCBUb29sdGlwIGZyb20gJ2FudC1kZXNpZ24tdnVlL2VzL3Rvb2x0aXAnOwppbXBvcnQgeyBjdXRTdHJCeUZ1bGxMZW5ndGgsIGdldFN0ckZ1bGxMZW5ndGggfSBmcm9tICdAL2NvbXBvbmVudHMvX3V0aWwvdXRpbCc7Ci8qDQogICAgY29uc3QgaXNTdXBwb3J0TGluZUNsYW1wID0gZG9jdW1lbnQuYm9keS5zdHlsZS53ZWJraXRMaW5lQ2xhbXAgIT09IHVuZGVmaW5lZDsNCg0KICAgIGNvbnN0IFRvb2x0aXBPdmVybGF5U3R5bGUgPSB7DQogICAgICBvdmVyZmxvd1dyYXA6ICdicmVhay13b3JkJywNCiAgICAgIHdvcmRXcmFwOiAnYnJlYWstd29yZCcsDQogICAgfTsNCiAgKi8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnRWxsaXBzaXMnLAogIGNvbXBvbmVudHM6IHsKICAgIFRvb2x0aXA6IFRvb2x0aXAKICB9LAogIHByb3BzOiB7CiAgICBwcmVmaXhDbHM6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAnYW50LXByby1lbGxpcHNpcycKICAgIH0sCiAgICB0b29sdGlwOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4KICAgIH0sCiAgICBsZW5ndGg6IHsKICAgICAgdHlwZTogTnVtYmVyLAogICAgICByZXF1aXJlZDogdHJ1ZQogICAgfSwKICAgIGxpbmVzOiB7CiAgICAgIHR5cGU6IE51bWJlciwKICAgICAgZGVmYXVsdDogMQogICAgfSwKICAgIGZ1bGxXaWR0aFJlY29nbml0aW9uOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IGZhbHNlCiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXRTdHJEb206IGZ1bmN0aW9uIGdldFN0ckRvbShzdHIsIGZ1bGxMZW5ndGgpIHsKICAgICAgdmFyIGggPSB0aGlzLiRjcmVhdGVFbGVtZW50OwogICAgICByZXR1cm4gaCgic3BhbiIsIFtjdXRTdHJCeUZ1bGxMZW5ndGgoc3RyLCB0aGlzLmxlbmd0aCkgKyAoZnVsbExlbmd0aCA+IHRoaXMubGVuZ3RoID8gJy4uLicgOiAnJyldKTsKICAgIH0sCiAgICBnZXRUb29sdGlwOiBmdW5jdGlvbiBnZXRUb29sdGlwKGZ1bGxTdHIsIGZ1bGxMZW5ndGgpIHsKICAgICAgdmFyIGggPSB0aGlzLiRjcmVhdGVFbGVtZW50OwogICAgICByZXR1cm4gaChUb29sdGlwLCBbaCgidGVtcGxhdGUiLCB7CiAgICAgICAgInNsb3QiOiAidGl0bGUiCiAgICAgIH0sIFtmdWxsU3RyXSksIHRoaXMuZ2V0U3RyRG9tKGZ1bGxTdHIsIGZ1bGxMZW5ndGgpXSk7CiAgICB9CiAgfSwKICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcigpIHsKICAgIHZhciBfdGhpcyQkcHJvcHMgPSB0aGlzLiRwcm9wcywKICAgICAgICB0b29sdGlwID0gX3RoaXMkJHByb3BzLnRvb2x0aXAsCiAgICAgICAgbGVuZ3RoID0gX3RoaXMkJHByb3BzLmxlbmd0aDsKICAgIHZhciBzdHIgPSB0aGlzLiRzbG90cy5kZWZhdWx0Lm1hcChmdW5jdGlvbiAodk5vZGUpIHsKICAgICAgcmV0dXJuIHZOb2RlLnRleHQ7CiAgICB9KS5qb2luKCcnKTsKICAgIHZhciBmdWxsTGVuZ3RoID0gZ2V0U3RyRnVsbExlbmd0aChzdHIpOwogICAgdmFyIHN0ckRvbSA9IHRvb2x0aXAgJiYgZnVsbExlbmd0aCA+IGxlbmd0aCA/IHRoaXMuZ2V0VG9vbHRpcChzdHIsIGZ1bGxMZW5ndGgpIDogdGhpcy5nZXRTdHJEb20oc3RyLCBmdWxsTGVuZ3RoKTsKICAgIHJldHVybiBzdHJEb207CiAgfQp9Ow=="},{"version":3,"mappings":";;;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACAA,kBADA;AAEAC;AACAC;AADA,GAFA;AAKAC;AACAC;AACAC,kBADA;AAEAC;AAFA,KADA;AAKAC;AACAF;AADA,KALA;AAQAG;AACAH,kBADA;AAEAI;AAFA,KARA;AAYAC;AACAL,kBADA;AAEAC;AAFA,KAZA;AAgBAK;AACAN,mBADA;AAEAC;AAFA;AAhBA,GALA;AA0BAM;AACAC,aADA,qBACAC,GADA,EACAC,UADA,EACA;AAAA;AACA;AACA,KAHA;AAIAC,cAJA,sBAIAC,OAJA,EAIAF,UAJA,EAIA;AAAA;AACA;AAAA,gBAEA;AAFA,UAEAE,OAFA,IAGA,mCAHA;AAMA;AAXA,GA1BA;AAuCAC,QAvCA,oBAuCA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA,iBACAX,mGADA;AAEA;AACA;AA9CA","names":["name","components","Tooltip","props","prefixCls","type","default","tooltip","length","required","lines","fullWidthRecognition","methods","getStrDom","str","fullLength","getTooltip","fullStr","render"],"sourceRoot":"src/components/Ellipsis","sources":["Ellipsis.vue"],"sourcesContent":["<script>\r\nimport Tooltip from 'ant-design-vue/es/tooltip'\r\nimport { cutStrByFullLength, getStrFullLength } from '@/components/_util/util'\r\n/*\r\n    const isSupportLineClamp = document.body.style.webkitLineClamp !== undefined;\r\n\r\n    const TooltipOverlayStyle = {\r\n      overflowWrap: 'break-word',\r\n      wordWrap: 'break-word',\r\n    };\r\n  */\r\n\r\nexport default {\r\n    name: 'Ellipsis',\r\n    components: {\r\n        Tooltip\r\n    },\r\n    props: {\r\n        prefixCls: {\r\n            type: String,\r\n            default: 'ant-pro-ellipsis'\r\n        },\r\n        tooltip: {\r\n            type: Boolean\r\n        },\r\n        length: {\r\n            type: Number,\r\n            required: true\r\n        },\r\n        lines: {\r\n            type: Number,\r\n            default: 1\r\n        },\r\n        fullWidthRecognition: {\r\n            type: Boolean,\r\n            default: false\r\n        }\r\n    },\r\n    methods: {\r\n        getStrDom(str, fullLength) {\r\n            return <span>{cutStrByFullLength(str, this.length) + (fullLength > this.length ? '...' : '')}</span>\r\n        },\r\n        getTooltip(fullStr, fullLength) {\r\n            return (\r\n                <Tooltip>\r\n                    <template slot=\"title\">{fullStr}</template>\r\n                    {this.getStrDom(fullStr, fullLength)}\r\n                </Tooltip>\r\n            )\r\n        }\r\n    },\r\n    render() {\r\n        const { tooltip, length } = this.$props\r\n        const str = this.$slots.default.map(vNode => vNode.text).join('')\r\n        const fullLength = getStrFullLength(str)\r\n        const strDom =\r\n            tooltip && fullLength > length ? this.getTooltip(str, fullLength) : this.getStrDom(str, fullLength)\r\n        return strDom\r\n    }\r\n}\r\n</script>\r\n"]}]}