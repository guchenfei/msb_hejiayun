{"remainingRequest":"E:\\ideas-test\\webproject\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\ideas-test\\webproject\\src\\views\\user\\Login.vue?vue&type=style&index=0&id=1ecd471f&lang=less&scoped=true&","dependencies":[{"path":"E:\\ideas-test\\webproject\\src\\views\\user\\Login.vue","mtime":1652800842000},{"path":"E:\\ideas-test\\webproject\\node_modules\\css-loader\\dist\\cjs.js","mtime":1655196104040},{"path":"E:\\ideas-test\\webproject\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1655196105840},{"path":"E:\\ideas-test\\webproject\\node_modules\\postcss-loader\\src\\index.js","mtime":1655196104749},{"path":"E:\\ideas-test\\webproject\\node_modules\\less-loader\\dist\\cjs.js","mtime":1655196104499},{"path":"E:\\ideas-test\\webproject\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1655196103443},{"path":"E:\\ideas-test\\webproject\\node_modules\\vue-loader\\lib\\index.js","mtime":1655196105141}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnVzZXItbGF5b3V0LWxvZ2luIHsKICAgIGxhYmVsIHsKICAgICAgICBmb250LXNpemU6IDE0cHg7CiAgICAgICAgY29sb3I6ICNmZmY7CiAgICB9CiAgICAvZGVlcC8gLmFudC10YWJzLXRhYnsKICAgICAgY29sb3I6ICNmZmY7CiAgICB9CiAgICAvZGVlcC8gLmFudC10YWJzLXRhYi1hY3RpdmV7CiAgICAgICBjb2xvcjogIzE4OTBmZjsKICAgIH0KICAgIC9kZWVwLyAuYW50LXRhYnMtdGFiOmhvdmVyewogICAgICBjb2xvcjogIzE4OTBmZjsKICAgIH0KICAgIC5nZXRDYXB0Y2hhIHsKICAgICAgICBkaXNwbGF5OiBibG9jazsKICAgICAgICB3aWR0aDogMTAwJTsKICAgICAgICBoZWlnaHQ6IDQwcHg7CiAgICB9CgogICAgLmZvcmdlLXBhc3N3b3JkIHsKICAgICAgICBmb250LXNpemU6IDE0cHg7CiAgICAgICAgY29sb3I6ICNmZmY7CiAgICB9CgogICAgYnV0dG9uLmxvZ2luLWJ1dHRvbiB7CiAgICAgICAgcGFkZGluZzogMCAxNXB4OwogICAgICAgIGZvbnQtc2l6ZTogMTZweDsKICAgICAgICBoZWlnaHQ6IDQwcHg7CiAgICAgICAgd2lkdGg6IDEwMCU7CiAgICB9CgogICAgLnVzZXItbG9naW4tb3RoZXIgewogICAgICAgIHRleHQtYWxpZ246IGxlZnQ7CiAgICAgICAgbWFyZ2luLXRvcDogMjRweDsKICAgICAgICBsaW5lLWhlaWdodDogMjJweDsKCiAgICAgICAgLml0ZW0taWNvbiB7CiAgICAgICAgICAgIGZvbnQtc2l6ZTogMjRweDsKICAgICAgICAgICAgY29sb3I6ICNmZmY7CiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAxNnB4OwogICAgICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOwogICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7CiAgICAgICAgICAgIHRyYW5zaXRpb246IGNvbG9yIDAuM3M7CgogICAgICAgICAgICAmOmhvdmVyIHsKICAgICAgICAgICAgICAgIGNvbG9yOiAjMTg5MGZmOwogICAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICAucmVnaXN0ZXIgewogICAgICAgICAgICBmbG9hdDogcmlnaHQ7CiAgICAgICAgfQogICAgfQp9Cg=="},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAySA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/views/user","sourcesContent":["<template>\n  <div class=\"main\">\n    <a-form\n      id=\"formLogin\"\n      class=\"user-layout-login\"\n      ref=\"formLogin\"\n      :form=\"form\"\n      @submit=\"handleSubmit\"\n    >\n      <a-tabs\n        :activeKey=\"customActiveKey\"\n        :tabBarStyle=\"{ textAlign: 'center', borderBottom: 'unset' }\"\n        @change=\"handleTabClick\"\n      >\n        <a-tab-pane key=\"tab1\" tab=\"账号密码登录\">\n          <a-alert\n            v-if=\"isLoginError\"\n            type=\"error\"\n            showIcon\n            style=\"margin-bottom: 24px;\"\n            message=\"账户或密码错误（admin/ant.design )\"\n          />\n          <a-form-item>\n            <a-input\n              size=\"large\"\n              type=\"text\"\n              placeholder=\"账户: admin\"\n              v-decorator=\"[\n                'username',\n                {rules: [{ required: true, message: '请输入帐户名或邮箱地址' }, { validator: handleUsernameOrEmail }], validateTrigger: 'change'}\n              ]\"\n            >\n              <a-icon slot=\"prefix\" type=\"user\" :style=\"{ color: 'rgba(0,0,0,.25)' }\" />\n            </a-input>\n          </a-form-item>\n\n          <a-form-item>\n            <a-input\n              size=\"large\"\n              type=\"password\"\n              autocomplete=\"false\"\n              placeholder=\"密码: admin or ant.design\"\n              v-decorator=\"[\n                'password',\n                {rules: [{ required: true, message: '请输入密码' }], validateTrigger: 'blur'}\n              ]\"\n            >\n              <a-icon slot=\"prefix\" type=\"lock\" :style=\"{ color: 'rgba(0,0,0,.25)' }\" />\n            </a-input>\n          </a-form-item>\n        </a-tab-pane>\n        <a-tab-pane key=\"tab2\" tab=\"手机号登录\">\n          <a-form-item>\n            <a-input\n              size=\"large\"\n              type=\"text\"\n              placeholder=\"手机号\"\n              v-decorator=\"['mobile', {rules: [{ required: true, pattern: /^1[34578]\\d{9}$/, message: '请输入正确的手机号' }], validateTrigger: 'change'}]\"\n            >\n              <a-icon slot=\"prefix\" type=\"mobile\" :style=\"{ color: 'rgba(255,255,255)' }\" />\n            </a-input>\n          </a-form-item>\n\n          <a-row :gutter=\"16\">\n            <a-col class=\"gutter-row\" :span=\"16\">\n              <a-form-item>\n                <a-input\n                  size=\"large\"\n                  type=\"text\"\n                  placeholder=\"验证码\"\n                  v-decorator=\"['captcha', {rules: [{ required: true, message: '请输入验证码' }], validateTrigger: 'blur'}]\"\n                >\n                  <a-icon slot=\"prefix\" type=\"mail\" :style=\"{ color: 'rgba(0,0,0,.25)' }\" />\n                </a-input>\n              </a-form-item>\n            </a-col>\n            <a-col class=\"gutter-row\" :span=\"8\">\n              <a-button\n                class=\"getCaptcha\"\n                tabindex=\"-1\"\n                :disabled=\"state.smsSendBtn\"\n                @click.stop.prevent=\"getCaptcha\"\n                v-text=\"!state.smsSendBtn && '获取验证码' || (state.time+' s')\"\n              ></a-button>\n            </a-col>\n          </a-row>\n        </a-tab-pane>\n      </a-tabs>\n\n      <a-form-item>\n        <a-checkbox v-decorator=\"['rememberMe', { valuePropName: 'checked' }]\">自动登录</a-checkbox>\n        <router-link\n          :to=\"{ name: 'recover', params: { user: 'aaa'} }\"\n          class=\"forge-password\"\n          style=\"float: right;\"\n        >忘记密码</router-link>\n      </a-form-item>\n\n      <a-form-item style=\"margin-top:24px\">\n        <a-button\n          size=\"large\"\n          type=\"primary\"\n          htmlType=\"submit\"\n          class=\"login-button\"\n          :loading=\"state.loginBtn\"\n          :disabled=\"state.loginBtn\"\n        >确定</a-button>\n      </a-form-item>\n    </a-form>\n\n    <two-step-captcha\n      v-if=\"requiredTwoStepCaptcha\"\n      :visible=\"stepCaptchaVisible\"\n      @success=\"stepCaptchaSuccess\"\n      @cancel=\"stepCaptchaCancel\"\n    ></two-step-captcha>\n  </div>\n</template>\n\n<script>\nimport md5 from 'md5'\nimport TwoStepCaptcha from '@/components/tools/TwoStepCaptcha'\nimport { mapActions } from 'vuex'\nimport { timeFix } from '@/utils/util'\nimport { getSmsCaptcha, get2step } from '@/api/login'\nconst QS = require('qs')\n\nexport default {\n    components: {\n        TwoStepCaptcha\n    },\n    data() {\n        return {\n            customActiveKey: 'tab1',\n            loginBtn: false,\n            // login type: 0 email, 1 username, 2 telephone\n            loginType: 0,\n            isLoginError: false,\n            requiredTwoStepCaptcha: false,\n            stepCaptchaVisible: false,\n            form: this.$form.createForm(this),\n            state: {\n                time: 60,\n                loginBtn: false,\n                // login type: 0 email, 1 username, 2 telephone\n                loginType: 0,\n                smsSendBtn: false\n            }\n        }\n    },\n    created() {\n        get2step({})\n            .then(res => {\n                this.requiredTwoStepCaptcha = res.result.stepCode\n            })\n            .catch(() => {\n                this.requiredTwoStepCaptcha = false\n            })\n        // this.requiredTwoStepCaptcha = true\n    },\n    methods: {\n        ...mapActions(['Login', 'Logout']),\n        // handler\n        handleUsernameOrEmail(rule, value, callback) {\n            const { state } = this\n            const regex = /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+((\\.[a-zA-Z0-9_-]{2,3}){1,2})$/\n            if (regex.test(value)) {\n                state.loginType = 0\n            } else {\n                state.loginType = 1\n            }\n            callback()\n        },\n        handleTabClick(key) {\n            this.customActiveKey = key\n            // this.form.resetFields()\n        },\n        handleSubmit(e) {\n            e.preventDefault()\n            const {\n                form: { validateFields },\n                state,\n                customActiveKey,\n                Login\n            } = this\n\n            state.loginBtn = true\n\n            const validateFieldsKey = customActiveKey === 'tab1' ? ['username', 'password'] : ['mobile', 'captcha']\n\n            validateFields(validateFieldsKey, { force: true }, (err, values) => {\n                if (!err) {\n                    console.log('login form', values)\n                    const loginParams = { ...values }\n                    delete loginParams.username\n                    loginParams[!state.loginType ? 'email' : 'username'] = values.username\n                    loginParams.password = md5(values.password)\n                    console.log(loginParams, 'loginParams')\n                    // 设置参数的类型\n                    const params = QS.stringify(loginParams)\n                    Login(params)\n                        .then(res => this.loginSuccess(res))\n                        .catch(err => this.requestFailed(err))\n                        .finally(() => {\n                            state.loginBtn = false\n                        })\n                } else {\n                    setTimeout(() => {\n                        state.loginBtn = false\n                    }, 600)\n                }\n            })\n        },\n        getCaptcha(e) {\n            e.preventDefault()\n            const {\n                form: { validateFields },\n                state\n            } = this\n\n            validateFields(['mobile'], { force: true }, (err, values) => {\n                if (!err) {\n                    state.smsSendBtn = true\n\n                    const interval = window.setInterval(() => {\n                        if (state.time-- <= 0) {\n                            state.time = 60\n                            state.smsSendBtn = false\n                            window.clearInterval(interval)\n                        }\n                    }, 1000)\n\n                    const hide = this.$message.loading('验证码发送中..', 0)\n                    getSmsCaptcha({ mobile: values.mobile })\n                        .then(res => {\n                            setTimeout(hide, 2500)\n                            this.$notification['success']({\n                                message: '提示',\n                                description: '验证码获取成功，您的验证码为：' + res.result.captcha,\n                                duration: 8\n                            })\n                        })\n                        .catch(err => {\n                            setTimeout(hide, 1)\n                            clearInterval(interval)\n                            state.time = 60\n                            state.smsSendBtn = false\n                            this.requestFailed(err)\n                        })\n                }\n            })\n        },\n        stepCaptchaSuccess() {\n            this.loginSuccess()\n        },\n        stepCaptchaCancel() {\n            this.Logout().then(() => {\n                this.loginBtn = false\n                this.stepCaptchaVisible = false\n            })\n        },\n        loginSuccess(res) {\n            console.log(res)\n            // check res.homePage define, set $router.push name res.homePage\n            // Why not enter onComplete\n            /*\n      this.$router.push({ name: 'analysis' }, () => {\n        console.log('onComplete')\n        this.$notification.success({\n          message: '欢迎',\n          description: `${timeFix()}，欢迎回来`\n        })\n      })\n      */\n            this.$router.push({ path: '/' })\n            // 延迟 1 秒显示欢迎信息\n            setTimeout(() => {\n                this.$notification.success({\n                    message: '欢迎',\n                    description: `${timeFix()}，欢迎回来`\n                })\n            }, 1000)\n            this.isLoginError = false\n        },\n        requestFailed(err) {\n            this.isLoginError = true\n            this.$notification['error']({\n                message: '错误',\n                description: ((err.response || {}).data || {}).message || '请求出现错误，请稍后再试',\n                duration: 4\n            })\n        }\n    }\n}\n</script>\n\n<style lang=\"less\" scoped>\n.user-layout-login {\n    label {\n        font-size: 14px;\n        color: #fff;\n    }\n    /deep/ .ant-tabs-tab{\n      color: #fff;\n    }\n    /deep/ .ant-tabs-tab-active{\n       color: #1890ff;\n    }\n    /deep/ .ant-tabs-tab:hover{\n      color: #1890ff;\n    }\n    .getCaptcha {\n        display: block;\n        width: 100%;\n        height: 40px;\n    }\n\n    .forge-password {\n        font-size: 14px;\n        color: #fff;\n    }\n\n    button.login-button {\n        padding: 0 15px;\n        font-size: 16px;\n        height: 40px;\n        width: 100%;\n    }\n\n    .user-login-other {\n        text-align: left;\n        margin-top: 24px;\n        line-height: 22px;\n\n        .item-icon {\n            font-size: 24px;\n            color: #fff;\n            margin-left: 16px;\n            vertical-align: middle;\n            cursor: pointer;\n            transition: color 0.3s;\n\n            &:hover {\n                color: #1890ff;\n            }\n        }\n\n        .register {\n            float: right;\n        }\n    }\n}\n</style>\n"]}]}