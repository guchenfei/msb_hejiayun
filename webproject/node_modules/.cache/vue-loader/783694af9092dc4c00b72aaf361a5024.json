{"remainingRequest":"E:\\ideas-test\\webproject\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\ideas-test\\webproject\\src\\components\\Ellipsis\\Ellipsis.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\ideas-test\\webproject\\src\\components\\Ellipsis\\Ellipsis.vue","mtime":1587193626000},{"path":"E:\\ideas-test\\webproject\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1655196103443},{"path":"E:\\ideas-test\\webproject\\node_modules\\babel-loader\\lib\\index.js","mtime":1655196104199},{"path":"E:\\ideas-test\\webproject\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1655196103443},{"path":"E:\\ideas-test\\webproject\\node_modules\\vue-loader\\lib\\index.js","mtime":1655196105141}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgVG9vbHRpcCBmcm9tICdhbnQtZGVzaWduLXZ1ZS9lcy90b29sdGlwJw0KaW1wb3J0IHsgY3V0U3RyQnlGdWxsTGVuZ3RoLCBnZXRTdHJGdWxsTGVuZ3RoIH0gZnJvbSAnQC9jb21wb25lbnRzL191dGlsL3V0aWwnDQovKg0KICAgIGNvbnN0IGlzU3VwcG9ydExpbmVDbGFtcCA9IGRvY3VtZW50LmJvZHkuc3R5bGUud2Via2l0TGluZUNsYW1wICE9PSB1bmRlZmluZWQ7DQoNCiAgICBjb25zdCBUb29sdGlwT3ZlcmxheVN0eWxlID0gew0KICAgICAgb3ZlcmZsb3dXcmFwOiAnYnJlYWstd29yZCcsDQogICAgICB3b3JkV3JhcDogJ2JyZWFrLXdvcmQnLA0KICAgIH07DQogICovDQoNCmV4cG9ydCBkZWZhdWx0IHsNCiAgICBuYW1lOiAnRWxsaXBzaXMnLA0KICAgIGNvbXBvbmVudHM6IHsNCiAgICAgICAgVG9vbHRpcA0KICAgIH0sDQogICAgcHJvcHM6IHsNCiAgICAgICAgcHJlZml4Q2xzOiB7DQogICAgICAgICAgICB0eXBlOiBTdHJpbmcsDQogICAgICAgICAgICBkZWZhdWx0OiAnYW50LXByby1lbGxpcHNpcycNCiAgICAgICAgfSwNCiAgICAgICAgdG9vbHRpcDogew0KICAgICAgICAgICAgdHlwZTogQm9vbGVhbg0KICAgICAgICB9LA0KICAgICAgICBsZW5ndGg6IHsNCiAgICAgICAgICAgIHR5cGU6IE51bWJlciwNCiAgICAgICAgICAgIHJlcXVpcmVkOiB0cnVlDQogICAgICAgIH0sDQogICAgICAgIGxpbmVzOiB7DQogICAgICAgICAgICB0eXBlOiBOdW1iZXIsDQogICAgICAgICAgICBkZWZhdWx0OiAxDQogICAgICAgIH0sDQogICAgICAgIGZ1bGxXaWR0aFJlY29nbml0aW9uOiB7DQogICAgICAgICAgICB0eXBlOiBCb29sZWFuLA0KICAgICAgICAgICAgZGVmYXVsdDogZmFsc2UNCiAgICAgICAgfQ0KICAgIH0sDQogICAgbWV0aG9kczogew0KICAgICAgICBnZXRTdHJEb20oc3RyLCBmdWxsTGVuZ3RoKSB7DQogICAgICAgICAgICByZXR1cm4gPHNwYW4+e2N1dFN0ckJ5RnVsbExlbmd0aChzdHIsIHRoaXMubGVuZ3RoKSArIChmdWxsTGVuZ3RoID4gdGhpcy5sZW5ndGggPyAnLi4uJyA6ICcnKX08L3NwYW4+DQogICAgICAgIH0sDQogICAgICAgIGdldFRvb2x0aXAoZnVsbFN0ciwgZnVsbExlbmd0aCkgew0KICAgICAgICAgICAgcmV0dXJuICgNCiAgICAgICAgICAgICAgICA8VG9vbHRpcD4NCiAgICAgICAgICAgICAgICAgICAgPHRlbXBsYXRlIHNsb3Q9InRpdGxlIj57ZnVsbFN0cn08L3RlbXBsYXRlPg0KICAgICAgICAgICAgICAgICAgICB7dGhpcy5nZXRTdHJEb20oZnVsbFN0ciwgZnVsbExlbmd0aCl9DQogICAgICAgICAgICAgICAgPC9Ub29sdGlwPg0KICAgICAgICAgICAgKQ0KICAgICAgICB9DQogICAgfSwNCiAgICByZW5kZXIoKSB7DQogICAgICAgIGNvbnN0IHsgdG9vbHRpcCwgbGVuZ3RoIH0gPSB0aGlzLiRwcm9wcw0KICAgICAgICBjb25zdCBzdHIgPSB0aGlzLiRzbG90cy5kZWZhdWx0Lm1hcCh2Tm9kZSA9PiB2Tm9kZS50ZXh0KS5qb2luKCcnKQ0KICAgICAgICBjb25zdCBmdWxsTGVuZ3RoID0gZ2V0U3RyRnVsbExlbmd0aChzdHIpDQogICAgICAgIGNvbnN0IHN0ckRvbSA9DQogICAgICAgICAgICB0b29sdGlwICYmIGZ1bGxMZW5ndGggPiBsZW5ndGggPyB0aGlzLmdldFRvb2x0aXAoc3RyLCBmdWxsTGVuZ3RoKSA6IHRoaXMuZ2V0U3RyRG9tKHN0ciwgZnVsbExlbmd0aCkNCiAgICAgICAgcmV0dXJuIHN0ckRvbQ0KICAgIH0NCn0NCg=="},{"version":3,"sources":["Ellipsis.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Ellipsis.vue","sourceRoot":"src/components/Ellipsis","sourcesContent":["<script>\r\nimport Tooltip from 'ant-design-vue/es/tooltip'\r\nimport { cutStrByFullLength, getStrFullLength } from '@/components/_util/util'\r\n/*\r\n    const isSupportLineClamp = document.body.style.webkitLineClamp !== undefined;\r\n\r\n    const TooltipOverlayStyle = {\r\n      overflowWrap: 'break-word',\r\n      wordWrap: 'break-word',\r\n    };\r\n  */\r\n\r\nexport default {\r\n    name: 'Ellipsis',\r\n    components: {\r\n        Tooltip\r\n    },\r\n    props: {\r\n        prefixCls: {\r\n            type: String,\r\n            default: 'ant-pro-ellipsis'\r\n        },\r\n        tooltip: {\r\n            type: Boolean\r\n        },\r\n        length: {\r\n            type: Number,\r\n            required: true\r\n        },\r\n        lines: {\r\n            type: Number,\r\n            default: 1\r\n        },\r\n        fullWidthRecognition: {\r\n            type: Boolean,\r\n            default: false\r\n        }\r\n    },\r\n    methods: {\r\n        getStrDom(str, fullLength) {\r\n            return <span>{cutStrByFullLength(str, this.length) + (fullLength > this.length ? '...' : '')}</span>\r\n        },\r\n        getTooltip(fullStr, fullLength) {\r\n            return (\r\n                <Tooltip>\r\n                    <template slot=\"title\">{fullStr}</template>\r\n                    {this.getStrDom(fullStr, fullLength)}\r\n                </Tooltip>\r\n            )\r\n        }\r\n    },\r\n    render() {\r\n        const { tooltip, length } = this.$props\r\n        const str = this.$slots.default.map(vNode => vNode.text).join('')\r\n        const fullLength = getStrFullLength(str)\r\n        const strDom =\r\n            tooltip && fullLength > length ? this.getTooltip(str, fullLength) : this.getStrDom(str, fullLength)\r\n        return strDom\r\n    }\r\n}\r\n</script>\r\n"]}]}