{"remainingRequest":"E:\\ideas-test\\webproject\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\ideas-test\\webproject\\src\\components\\Charts\\TagCloud.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\ideas-test\\webproject\\src\\components\\Charts\\TagCloud.vue","mtime":1587193626000},{"path":"E:\\ideas-test\\webproject\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1655196103443},{"path":"E:\\ideas-test\\webproject\\node_modules\\babel-loader\\lib\\index.js","mtime":1655196104199},{"path":"E:\\ideas-test\\webproject\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1655196103443},{"path":"E:\\ideas-test\\webproject\\node_modules\\vue-loader\\lib\\index.js","mtime":1655196105141}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgeyByZWdpc3RlclNoYXBlIH0gZnJvbSAndmlzZXItdnVlJw0KY29uc3QgRGF0YVNldCA9IHJlcXVpcmUoJ0BhbnR2L2RhdGEtc2V0JykNCg0KY29uc3QgaW1nVXJsID0gJ2h0dHBzOi8vZ3cuYWxpcGF5b2JqZWN0cy5jb20vem9zL3Jtc3BvcnRhbC9nV3llR0xDZEZGUmF2QkdJRHpXay5wbmcnDQoNCmNvbnN0IHNjYWxlID0gWw0KICAgIHsgZGF0YUtleTogJ3gnLCBuaWNlOiBmYWxzZSB9LA0KICAgIHsgZGF0YUtleTogJ3knLCBuaWNlOiBmYWxzZSB9DQpdDQoNCnJlZ2lzdGVyU2hhcGUoJ3BvaW50JywgJ2Nsb3VkJywgew0KICAgIGRyYXcoY2ZnLCBjb250YWluZXIpIHsNCiAgICAgICAgcmV0dXJuIGNvbnRhaW5lci5hZGRTaGFwZSgndGV4dCcsIHsNCiAgICAgICAgICAgIGF0dHJzOiB7DQogICAgICAgICAgICAgICAgZmlsbE9wYWNpdHk6IGNmZy5vcGFjaXR5LA0KICAgICAgICAgICAgICAgIGZvbnRTaXplOiBjZmcub3JpZ2luLl9vcmlnaW4uc2l6ZSwNCiAgICAgICAgICAgICAgICByb3RhdGU6IGNmZy5vcmlnaW4uX29yaWdpbi5yb3RhdGUsDQogICAgICAgICAgICAgICAgdGV4dDogY2ZnLm9yaWdpbi5fb3JpZ2luLnRleHQsDQogICAgICAgICAgICAgICAgdGV4dEFsaWduOiAnY2VudGVyJywNCiAgICAgICAgICAgICAgICBmb250RmFtaWx5OiBjZmcub3JpZ2luLl9vcmlnaW4uZm9udCwNCiAgICAgICAgICAgICAgICBmaWxsOiBjZmcuY29sb3IsDQogICAgICAgICAgICAgICAgdGV4dEJhc2VsaW5lOiAnQWxwaGFiZXRpYycsDQogICAgICAgICAgICAgICAgLi4uY2ZnLnN0eWxlLA0KICAgICAgICAgICAgICAgIHg6IGNmZy54LA0KICAgICAgICAgICAgICAgIHk6IGNmZy55DQogICAgICAgICAgICB9DQogICAgICAgIH0pDQogICAgfQ0KfSkNCg0KZXhwb3J0IGRlZmF1bHQgew0KICAgIG5hbWU6ICdUYWdDbG91ZCcsDQogICAgcHJvcHM6IHsNCiAgICAgICAgdGFnTGlzdDogew0KICAgICAgICAgICAgdHlwZTogQXJyYXksDQogICAgICAgICAgICByZXF1aXJlZDogdHJ1ZQ0KICAgICAgICB9LA0KICAgICAgICBoZWlnaHQ6IHsNCiAgICAgICAgICAgIHR5cGU6IE51bWJlciwNCiAgICAgICAgICAgIGRlZmF1bHQ6IDQwMA0KICAgICAgICB9LA0KICAgICAgICB3aWR0aDogew0KICAgICAgICAgICAgdHlwZTogTnVtYmVyLA0KICAgICAgICAgICAgZGVmYXVsdDogNjQwDQogICAgICAgIH0NCiAgICB9LA0KICAgIGRhdGEoKSB7DQogICAgICAgIHJldHVybiB7DQogICAgICAgICAgICBkYXRhOiBbXSwNCiAgICAgICAgICAgIHNjYWxlDQogICAgICAgIH0NCiAgICB9LA0KICAgIHdhdGNoOiB7DQogICAgICAgIHRhZ0xpc3Q6IGZ1bmN0aW9uKHZhbCkgew0KICAgICAgICAgICAgaWYgKHZhbC5sZW5ndGggPiAwKSB7DQogICAgICAgICAgICAgICAgdGhpcy5pbml0VGFnQ2xvdWQodmFsKQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgfSwNCiAgICBtb3VudGVkKCkgew0KICAgICAgICBpZiAodGhpcy50YWdMaXN0Lmxlbmd0aCA+IDApIHsNCiAgICAgICAgICAgIHRoaXMuaW5pdFRhZ0Nsb3VkKHRoaXMudGFnTGlzdCkNCiAgICAgICAgfQ0KICAgIH0sDQogICAgbWV0aG9kczogew0KICAgICAgICBpbml0VGFnQ2xvdWQoZGF0YVNvdXJjZSkgew0KICAgICAgICAgICAgY29uc3QgeyBoZWlnaHQsIHdpZHRoIH0gPSB0aGlzDQoNCiAgICAgICAgICAgIGNvbnN0IGR2ID0gbmV3IERhdGFTZXQuVmlldygpLnNvdXJjZShkYXRhU291cmNlKQ0KICAgICAgICAgICAgY29uc3QgcmFuZ2UgPSBkdi5yYW5nZSgndmFsdWUnKQ0KICAgICAgICAgICAgY29uc3QgbWluID0gcmFuZ2VbMF0NCiAgICAgICAgICAgIGNvbnN0IG1heCA9IHJhbmdlWzFdDQogICAgICAgICAgICBjb25zdCBpbWFnZU1hc2sgPSBuZXcgSW1hZ2UoKQ0KICAgICAgICAgICAgaW1hZ2VNYXNrLmNyb3NzT3JpZ2luID0gJycNCiAgICAgICAgICAgIGltYWdlTWFzay5zcmMgPSBpbWdVcmwNCiAgICAgICAgICAgIGltYWdlTWFzay5vbmxvYWQgPSAoKSA9PiB7DQogICAgICAgICAgICAgICAgZHYudHJhbnNmb3JtKHsNCiAgICAgICAgICAgICAgICAgICAgdHlwZTogJ3RhZy1jbG91ZCcsDQogICAgICAgICAgICAgICAgICAgIGZpZWxkczogWyduYW1lJywgJ3ZhbHVlJ10sDQogICAgICAgICAgICAgICAgICAgIHNpemU6IFt3aWR0aCwgaGVpZ2h0XSwNCiAgICAgICAgICAgICAgICAgICAgaW1hZ2VNYXNrLA0KICAgICAgICAgICAgICAgICAgICBmb250OiAnVmVyZGFuYScsDQogICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDAsDQogICAgICAgICAgICAgICAgICAgIHRpbWVJbnRlcnZhbDogNTAwMCwgLy8gbWF4IGV4ZWN1dGUgdGltZQ0KICAgICAgICAgICAgICAgICAgICByb3RhdGUoKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBsZXQgcmFuZG9tID0gfn4oTWF0aC5yYW5kb20oKSAqIDQpICUgNA0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJhbmRvbSA9PT0gMikgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJhbmRvbSA9IDANCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiByYW5kb20gKiA5MCAvLyAwLCA5MCwgMjcwDQogICAgICAgICAgICAgICAgICAgIH0sDQogICAgICAgICAgICAgICAgICAgIGZvbnRTaXplKGQpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChkLnZhbHVlKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICgoZC52YWx1ZSAtIG1pbikgLyAobWF4IC0gbWluKSkgKiAoMzIgLSA4KSArIDgNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAwDQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9KQ0KICAgICAgICAgICAgICAgIHRoaXMuZGF0YSA9IGR2LnJvd3MNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgIH0NCn0NCg=="},{"version":3,"sources":["TagCloud.vue"],"names":[],"mappings":";;;;;;;;;AASA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TagCloud.vue","sourceRoot":"src/components/Charts","sourcesContent":["<template>\r\n  <v-chart :width=\"width\" :height=\"height\" :padding=\"[0]\" :data=\"data\" :scale=\"scale\">\r\n    <v-tooltip :show-title=\"false\" />\r\n    <v-coord type=\"rect\" direction=\"TL\" />\r\n    <v-point position=\"x*y\" color=\"category\" shape=\"cloud\" tooltip=\"value*category\" />\r\n  </v-chart>\r\n</template>\r\n\r\n<script>\r\nimport { registerShape } from 'viser-vue'\r\nconst DataSet = require('@antv/data-set')\r\n\r\nconst imgUrl = 'https://gw.alipayobjects.com/zos/rmsportal/gWyeGLCdFFRavBGIDzWk.png'\r\n\r\nconst scale = [\r\n    { dataKey: 'x', nice: false },\r\n    { dataKey: 'y', nice: false }\r\n]\r\n\r\nregisterShape('point', 'cloud', {\r\n    draw(cfg, container) {\r\n        return container.addShape('text', {\r\n            attrs: {\r\n                fillOpacity: cfg.opacity,\r\n                fontSize: cfg.origin._origin.size,\r\n                rotate: cfg.origin._origin.rotate,\r\n                text: cfg.origin._origin.text,\r\n                textAlign: 'center',\r\n                fontFamily: cfg.origin._origin.font,\r\n                fill: cfg.color,\r\n                textBaseline: 'Alphabetic',\r\n                ...cfg.style,\r\n                x: cfg.x,\r\n                y: cfg.y\r\n            }\r\n        })\r\n    }\r\n})\r\n\r\nexport default {\r\n    name: 'TagCloud',\r\n    props: {\r\n        tagList: {\r\n            type: Array,\r\n            required: true\r\n        },\r\n        height: {\r\n            type: Number,\r\n            default: 400\r\n        },\r\n        width: {\r\n            type: Number,\r\n            default: 640\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            data: [],\r\n            scale\r\n        }\r\n    },\r\n    watch: {\r\n        tagList: function(val) {\r\n            if (val.length > 0) {\r\n                this.initTagCloud(val)\r\n            }\r\n        }\r\n    },\r\n    mounted() {\r\n        if (this.tagList.length > 0) {\r\n            this.initTagCloud(this.tagList)\r\n        }\r\n    },\r\n    methods: {\r\n        initTagCloud(dataSource) {\r\n            const { height, width } = this\r\n\r\n            const dv = new DataSet.View().source(dataSource)\r\n            const range = dv.range('value')\r\n            const min = range[0]\r\n            const max = range[1]\r\n            const imageMask = new Image()\r\n            imageMask.crossOrigin = ''\r\n            imageMask.src = imgUrl\r\n            imageMask.onload = () => {\r\n                dv.transform({\r\n                    type: 'tag-cloud',\r\n                    fields: ['name', 'value'],\r\n                    size: [width, height],\r\n                    imageMask,\r\n                    font: 'Verdana',\r\n                    padding: 0,\r\n                    timeInterval: 5000, // max execute time\r\n                    rotate() {\r\n                        let random = ~~(Math.random() * 4) % 4\r\n                        if (random === 2) {\r\n                            random = 0\r\n                        }\r\n                        return random * 90 // 0, 90, 270\r\n                    },\r\n                    fontSize(d) {\r\n                        if (d.value) {\r\n                            return ((d.value - min) / (max - min)) * (32 - 8) + 8\r\n                        }\r\n                        return 0\r\n                    }\r\n                })\r\n                this.data = dv.rows\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>\r\n"]}]}